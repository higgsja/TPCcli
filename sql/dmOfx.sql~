-- MySQL dump 10.13  Distrib 5.7.23, for Linux (x86_64)
--
-- Host: localhost    Database: dmOfx
-- ------------------------------------------------------
-- Server version	5.7.23-0ubuntu0.16.04.1

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Current Database: `dmOfx`
--

CREATE DATABASE IF NOT EXISTS `hlhtxc5_dmOfx` 
DEFAULT CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_520_ci;

USE `hlhtxc5_dmOfx`;

--
-- Table structure for table `AccountTotals`
--

DROP TABLE IF EXISTS `AccountTotals`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `AccountTotals` (
  `DMAcctId` int(10) NOT NULL,
  `StmtDt` date NOT NULL,
  `Cost` decimal(19,4) NOT NULL,
  `MktValue` decimal(19,4) NOT NULL,
  `PctGain` decimal(19,4) NOT NULL,
  PRIMARY KEY (`DMAcctId`,`StmtDt`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `Accounts`
--

DROP TABLE IF EXISTS `Accounts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Accounts` (
  `DMAcctId` int(11) NOT NULL AUTO_INCREMENT,
  `BrokerId` int(11) NOT NULL,
  `AcctId` int(11) NOT NULL,
  `Org` char(32) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  `FId` char(32) CHARACTER SET utf8 COLLATE utf8_unicode_ci DEFAULT NULL,
  `BrokerIdFi` char(22) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  `InvAcctIdFi` char(22) CHARACTER SET utf8 COLLATE utf8_unicode_ci NOT NULL,
  PRIMARY KEY (`DMAcctId`)
) ENGINE=InnoDB AUTO_INCREMENT=1007 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `Balances`
--

DROP TABLE IF EXISTS `Balances`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Balances` (
  `DMAcctId` int(10) NOT NULL,
  `Name` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Descr` char(80) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `BalType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Value` decimal(19,4) NOT NULL,
  `DtAsOf` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`Name`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `Brokers`
--

DROP TABLE IF EXISTS `Brokers`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Brokers` (
  `BrokerId` int(10) NOT NULL AUTO_INCREMENT,
  `Org` char(32) DEFAULT NULL,
  `FId` char(32) DEFAULT NULL,
  `BrokerIdFi` char(22) NOT NULL,
  PRIMARY KEY (`BrokerId`),
  UNIQUE KEY `con_BrokerIdBrokerIdFi` (`Org`,`FId`,`BrokerIdFi`),
  UNIQUE KEY `con_OrgFId` (`Org`,`FId`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClientAccts`
--

DROP TABLE IF EXISTS `ClientAccts`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClientAccts` (
  `DMAcctId` int(10) NOT NULL,
  `ClientAcctName` char(255) NOT NULL,
  `Active` char(3) DEFAULT 'Yes',
  PRIMARY KEY (`DMAcctId`),
  UNIQUE KEY `pk_DMAcctName` (`DMAcctId`),
  UNIQUE KEY `DMAcctId` (`DMAcctId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClientEquityAttributes`
--

DROP TABLE IF EXISTS `ClientEquityAttributes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClientEquityAttributes` (
  `Ticker` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Tkr_AlphaVantage` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `DLHistory` char(3) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClientSectorId` int(10) NOT NULL,
  `TgtPct` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `AnalystTgt` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `StkPrice` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `Description` varchar(80) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `TgtLocked` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT 'No',
  `ActPct` decimal(19,4) DEFAULT '0.0000',
  PRIMARY KEY (`Ticker`),
  UNIQUE KEY `idx_tkrAlpha` (`Tkr_AlphaVantage`),
  KEY `idx_ClientSector` (`ClientSectorId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClientEquityAttributesOld`
--

DROP TABLE IF EXISTS `ClientEquityAttributesOld`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClientEquityAttributesOld` (
  `Tkr` char(120) NOT NULL,
  `Tkr_AlphaVantage` char(120) NOT NULL,
  `DLHistory` char(3) NOT NULL DEFAULT 'Yes' COMMENT 'Options are Yes or NoAll new additions default to Yes',
  `ClientSector` char(100) DEFAULT NULL,
  `TargetPct` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `AnalystTarget` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `StkPrice` decimal(19,4) NOT NULL DEFAULT '0.0000',
  PRIMARY KEY (`Tkr`),
  UNIQUE KEY `idx_TkrAlphaVantageClientUpdateDLHistory` (`Tkr_AlphaVantage`,`DLHistory`) USING BTREE,
  UNIQUE KEY `idx_AdjTkr_AClientDLHistory` (`Tkr_AlphaVantage`,`DLHistory`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClientSectorList`
--

DROP TABLE IF EXISTS `ClientSectorList`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClientSectorList` (
  `ClientSectorId` int(10) NOT NULL AUTO_INCREMENT,
  `ClientSector` varchar(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `CSecShort` varchar(10) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Active` char(3) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'Yes',
  `TgtPct` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `Description` varchar(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `TgtLocked` char(3) COLLATE utf8mb4_unicode_520_ci NOT NULL DEFAULT 'No',
  `ActPct` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `MktVal` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `LeveragedMktVal` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `CustomSector` tinyint(4) NOT NULL DEFAULT '0',
  PRIMARY KEY (`ClientSectorId`),
  UNIQUE KEY `ClientSectorId` (`ClientSectorId`),
  UNIQUE KEY `ClientSector` (`ClientSector`),
  UNIQUE KEY `CSecShort` (`CSecShort`)
) ENGINE=InnoDB AUTO_INCREMENT=77 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClientSectorListOld`
--

DROP TABLE IF EXISTS `ClientSectorListOld`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClientSectorListOld` (
  `ClientSector` varchar(255) NOT NULL,
  `CSecShort` varchar(10) NOT NULL,
  `TgtPct` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `Description` varchar(255) DEFAULT NULL,
  `TgtLocked` char(3) NOT NULL DEFAULT 'No',
  `ActPct` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `MktVal` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `LeveragedMktVal` decimal(19,4) NOT NULL DEFAULT '0.0000',
  UNIQUE KEY `Sector` (`ClientSector`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClientTransferData`
--

DROP TABLE IF EXISTS `ClientTransferData`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClientTransferData` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) NOT NULL,
  `SecId` char(32) NOT NULL,
  `SubAcctSec` char(12) NOT NULL,
  `TferAction` char(12) NOT NULL,
  `Units` decimal(19,4) NOT NULL,
  `CostBasis` decimal(19,4) NOT NULL,
  `GMTDtSettle` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `GMTDtPurchase` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_AcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosedOptionFIFO`
--

DROP TABLE IF EXISTS `ClosedOptionFIFO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosedOptionFIFO` (
  `DMAcctId` int(10) NOT NULL,
  `FiTIdOpening` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClosedGrp` int(10) NOT NULL AUTO_INCREMENT,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StrikePrice` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `DtExpire` date NOT NULL,
  `GMTDtOpened` datetime NOT NULL,
  `GMTDtClosed` datetime DEFAULT NULL,
  `ShPerCtrct` int(5) NOT NULL DEFAULT '0',
  `Units` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `UnitPriceOpen` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `UnitPriceClose` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `MarkUpDn` decimal(19,4) DEFAULT '0.0000',
  `Commission` decimal(19,4) DEFAULT '0.0000',
  `Taxes` decimal(19,4) DEFAULT '0.0000',
  `Fees` decimal(19,4) DEFAULT '0.0000',
  `TransLoad` decimal(19,4) DEFAULT '0.0000',
  `TotalOpen` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `TotalClose` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`ClosedGrp`)
) ENGINE=InnoDB AUTO_INCREMENT=1228 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosedOptionTrans`
--

DROP TABLE IF EXISTS `ClosedOptionTrans`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosedOptionTrans` (
  `DMAcctIdOpening` int(10) NOT NULL,
  `FiTIdOpening` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClosedGrp` int(10) NOT NULL,
  `FiTIdClosing` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StrikePrice` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `DtExpire` date NOT NULL,
  `GMTDtTrade` datetime NOT NULL,
  `GMTDtSettle` datetime DEFAULT NULL,
  `ShPerCtrct` int(5) NOT NULL,
  `Units` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `UnitPrice` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `MarkUpDn` decimal(19,4) DEFAULT '0.0000',
  `Commission` decimal(19,4) DEFAULT '0.0000',
  `Taxes` decimal(19,4) DEFAULT '0.0000',
  `Fees` decimal(19,4) DEFAULT '0.0000',
  `TransLoad` decimal(19,4) DEFAULT '0.0000',
  `Total` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptTransType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctIdOpening`,`ClosedGrp`,`FiTIdOpening`,`FiTIdClosing`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosedOptionsLots`
--

DROP TABLE IF EXISTS `ClosedOptionsLots`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosedOptionsLots` (
  `DMAcctId` int(10) NOT NULL,
  `OpenFiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `CloseFiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StrikePrice` decimal(19,4) NOT NULL,
  `DtExpire` date NOT NULL,
  `GMTDtOpened` datetime NOT NULL,
  `GMTDtClosed` datetime NOT NULL,
  `ShPerCtrct` int(5) NOT NULL,
  `OpenUnits` decimal(19,4) NOT NULL,
  `CloseUnits` decimal(19,4) NOT NULL,
  `OpenUnitPrice` decimal(19,4) NOT NULL,
  `CloseUnitPrice` decimal(19,4) NOT NULL,
  `OpenMarkUpDn` decimal(19,4) DEFAULT NULL,
  `CloseMarkUpDn` decimal(19,4) DEFAULT NULL,
  `OpenCommission` decimal(19,4) DEFAULT NULL,
  `CloseCommission` decimal(19,4) DEFAULT NULL,
  `OpenTaxes` decimal(19,4) DEFAULT NULL,
  `CloseTaxes` decimal(19,4) DEFAULT NULL,
  `OpenFees` decimal(19,4) DEFAULT NULL,
  `CloseFees` decimal(19,4) DEFAULT NULL,
  `OpenTransLoad` decimal(19,4) DEFAULT NULL,
  `CloseTransLoad` decimal(19,4) DEFAULT NULL,
  `OpenTotal` decimal(19,4) NOT NULL,
  `CloseTotal` decimal(19,4) NOT NULL,
  `OpenSubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `CloseSubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OpenSubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `CloseSubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OpenOptTransType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `CloseOptTransType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OpeningOpen` decimal(19,4) DEFAULT NULL,
  `OpeningHigh` decimal(19,4) DEFAULT NULL,
  `OpeningLow` decimal(19,4) DEFAULT NULL,
  `OpeningAdjClose` decimal(19,4) DEFAULT NULL,
  `ClosingOpen` decimal(19,4) DEFAULT NULL,
  `ClosingHigh` decimal(19,4) DEFAULT NULL,
  `ClosingLow` decimal(19,4) DEFAULT NULL,
  `ClosingAdjClose` decimal(19,4) DEFAULT NULL,
  UNIQUE KEY `idx_SecNameDtClosedCloseFiTId` (`SecName`,`GMTDtClosed`,`CloseFiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosedStockFIFO`
--

DROP TABLE IF EXISTS `ClosedStockFIFO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosedStockFIFO` (
  `DMAcctIdOpening` int(10) NOT NULL,
  `FiTIdOpening` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClosedGrp` int(10) NOT NULL AUTO_INCREMENT,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GMTDtTrade` datetime NOT NULL,
  `GMTDtSettle` datetime DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `UnitPriceOpen` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `UnitPriceClose` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT '0.0000',
  `Taxes` decimal(19,4) DEFAULT '0.0000',
  `Fees` decimal(19,4) DEFAULT '0.0000',
  `TransLoad` decimal(19,4) DEFAULT '0.0000',
  `TotalOpen` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `TotalClose` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StockTransType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`ClosedGrp`),
  UNIQUE KEY `pk_DMAcctIdFiTIdClsdGrp` (`DMAcctIdOpening`,`FiTIdOpening`,`ClosedGrp`)
) ENGINE=InnoDB AUTO_INCREMENT=49 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosedStockTrans`
--

DROP TABLE IF EXISTS `ClosedStockTrans`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosedStockTrans` (
  `DMAcctIdOpening` int(10) NOT NULL,
  `FiTIdOpening` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClosedGrp` int(10) NOT NULL,
  `FiTIdClosing` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GMTDtTrade` datetime NOT NULL,
  `GMTDtSettle` datetime DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StockTransType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctIdOpening`,`FiTIdOpening`,`ClosedGrp`,`FiTIdClosing`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosingDebt`
--

DROP TABLE IF EXISTS `ClosingDebt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosingDebt` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) NOT NULL,
  `SecId` char(32) NOT NULL,
  `EquityId` char(255) NOT NULL,
  `SecName` char(120) NOT NULL,
  `Ticker` char(120) NOT NULL,
  `GMTDtTrade` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `GMTDtSettle` timestamp NULL DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) DEFAULT NULL,
  `SubAcctSec` char(15) NOT NULL,
  `SubAcctFund` char(15) NOT NULL,
  `ReversalFiTId` char(255) DEFAULT NULL,
  `AccrdInt` decimal(19,4) DEFAULT NULL,
  `SellReason` char(15) NOT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_AcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosingMF`
--

DROP TABLE IF EXISTS `ClosingMF`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosingMF` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) CHARACTER SET utf8 NOT NULL,
  `SecId` char(32) CHARACTER SET utf8 NOT NULL,
  `EquityId` char(32) CHARACTER SET utf8 NOT NULL,
  `SecName` char(120) CHARACTER SET utf8 NOT NULL,
  `Ticker` char(120) CHARACTER SET utf8 NOT NULL,
  `GMTDtTrade` timestamp NULL DEFAULT NULL,
  `GMTDtSettle` timestamp NOT NULL DEFAULT '1970-01-01 06:00:00',
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) CHARACTER SET utf8 DEFAULT NULL,
  `SubAcctSec` char(15) CHARACTER SET utf8 NOT NULL,
  `SubAcctFund` char(15) CHARACTER SET utf8 NOT NULL,
  `SellType` char(15) CHARACTER SET utf8 NOT NULL,
  `ReversalFiTId` char(255) CHARACTER SET utf8 DEFAULT NULL,
  `RelFiTID` char(255) CHARACTER SET utf8 DEFAULT NULL,
  `AvgCostBasis` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_DMAcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosingOptions`
--

DROP TABLE IF EXISTS `ClosingOptions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosingOptions` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StrikePrice` decimal(19,4) NOT NULL,
  `DtExpire` date NOT NULL,
  `GMTDtTrade` datetime NOT NULL,
  `GMTDtSettle` datetime DEFAULT NULL,
  `ShPerCtrct` int(5) NOT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptTransType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `RelFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `RelType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Secured` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ClosingOpen` decimal(19,4) DEFAULT NULL,
  `ClosingHigh` decimal(19,4) DEFAULT NULL,
  `ClosingLow` decimal(19,4) DEFAULT NULL,
  `ClosingAdjClose` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosingOther`
--

DROP TABLE IF EXISTS `ClosingOther`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosingOther` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(120) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `GMTDtTrade` timestamp NULL DEFAULT NULL,
  `GMTDtSettle` timestamp NOT NULL DEFAULT '1970-01-01 06:00:00',
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_DMAcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `ClosingStock`
--

DROP TABLE IF EXISTS `ClosingStock`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `ClosingStock` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GMTDtTrade` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `GMTDtSettle` timestamp NULL DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StockTransType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_DMAcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `Drawdown`
--

DROP TABLE IF EXISTS `Drawdown`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Drawdown` (
  `StmtDt` date DEFAULT NULL,
  `YrMo` varchar(7) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `MaxMktVal` decimal(19,4) DEFAULT NULL,
  `MinMktVal` decimal(19,4) DEFAULT NULL,
  `Drawdown` decimal(3,1) DEFAULT NULL,
  `SPXMax` decimal(19,4) DEFAULT NULL,
  `SPXMin` decimal(19,4) DEFAULT NULL,
  `SPXDrawdown` decimal(19,4) DEFAULT NULL,
  `RussellMax` decimal(19,4) DEFAULT NULL,
  `RussellMin` decimal(19,4) DEFAULT NULL,
  `RussellDrawdown` decimal(19,4) DEFAULT NULL,
  `QQQMax` decimal(19,4) DEFAULT NULL,
  `QQQMin` decimal(19,4) DEFAULT NULL,
  `QQQDrawdown` decimal(19,4) DEFAULT NULL,
  `DowMax` decimal(19,4) DEFAULT NULL,
  `DowMin` decimal(19,4) DEFAULT NULL,
  `DowDrawdown` decimal(19,4) DEFAULT NULL,
  UNIQUE KEY `YrMo_UNIQUE` (`YrMo`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `EquityHistory`
--

DROP TABLE IF EXISTS `EquityHistory`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `EquityHistory` (
  `Tkr_AlphaVantage` char(120) NOT NULL,
  `Date` date NOT NULL,
  `Tkr` char(120) DEFAULT NULL,
  `Open` decimal(19,4) DEFAULT NULL,
  `High` decimal(19,4) DEFAULT NULL,
  `Low` decimal(19,4) DEFAULT NULL,
  `Close` decimal(19,4) NOT NULL,
  `AdjClose` decimal(19,4) DEFAULT NULL,
  `DivAmt` decimal(19,4) DEFAULT NULL,
  `SplitCoeff` decimal(19,4) DEFAULT NULL,
  `Volume` int(10) DEFAULT NULL,
  PRIMARY KEY (`Tkr_AlphaVantage`,`Date`),
  KEY `idx_Tkr` (`Tkr`),
  KEY `idx_date` (`Date`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='The minimum we need for performance management is the daily close. So, Tkr, Date, Close are required.\n\nEverything else optional which enables utilization of alternative data sources that may not have all the data.';
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `FIFOClosed`
--

DROP TABLE IF EXISTS `FIFOClosed`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `FIFOClosed` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClosedGrp` varchar(45) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClientSectorId` int(10) NOT NULL,
  `GMTDtTradeOpen` datetime DEFAULT NULL,
  `GMTDtTradeClose` datetime DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPriceOpen` decimal(19,4) NOT NULL,
  `UnitPriceClose` decimal(19,4) NOT NULL,
  `Days` int(5) DEFAULT NULL,
  `PosType` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `TotalOpen` decimal(19,4) NOT NULL,
  `TotalClose` decimal(19,4) NOT NULL,
  `ClientAcctName` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ActPct` decimal(19,4) DEFAULT NULL,
  `EquityType` char(25) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GainPct` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`,`ClosedGrp`),
  KEY `ClientSectorId` (`ClientSectorId`),
  KEY `GMTDtTradeOpen` (`GMTDtTradeOpen`),
  KEY `Ticker` (`Ticker`),
  KEY `EquityId` (`EquityId`),
  KEY `GMTDtTradeClose` (`GMTDtTradeClose`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `FIFOPositions`
--

DROP TABLE IF EXISTS `FIFOPositions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `FIFOPositions` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `StrikePrice` decimal(19,4) DEFAULT NULL,
  `DtExpire` date DEFAULT NULL,
  `GMTDtTrade` datetime NOT NULL,
  `GMTDtSettle` datetime DEFAULT NULL,
  `ShPerCtrct` int(5) DEFAULT '0',
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `CurrPrice` decimal(19,4) DEFAULT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT '0.0000',
  `Commission` decimal(19,4) DEFAULT '0.0000',
  `Taxes` decimal(19,4) DEFAULT '0.0000',
  `Fees` decimal(19,4) DEFAULT '0.0000',
  `TransLoad` decimal(19,4) DEFAULT '0.0000',
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptTransType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `StockTransType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT 'null',
  `OpeningOpen` decimal(19,4) DEFAULT '0.0000',
  `OpeningHigh` decimal(19,4) DEFAULT '0.0000',
  `OpeningLow` decimal(19,4) DEFAULT '0.0000',
  `OpeningAdjClose` decimal(19,4) DEFAULT '0.0000',
  `ClientSectorId` int(10) DEFAULT NULL,
  `MktVal` decimal(19,4) DEFAULT NULL,
  `LMktVal` decimal(19,4) DEFAULT NULL,
  `ActPct` decimal(19,4) DEFAULT NULL,
  `EquityType` char(25) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `PosType` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GainPct` decimal(19,4) DEFAULT NULL,
  `Days` int(5) DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `FinVizInfo`
--

DROP TABLE IF EXISTS `FinVizInfo`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `FinVizInfo` (
  `Tkr` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Company` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Sector` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Industry` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Country` varchar(100) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `MktCap(B)` double DEFAULT NULL,
  `PE` double DEFAULT NULL,
  `FwdPE` double DEFAULT NULL,
  `PEG` double DEFAULT NULL,
  `Div` double DEFAULT NULL,
  `PayoutRatio` double DEFAULT NULL,
  `EPS` double DEFAULT NULL,
  `EPS/CY` double DEFAULT NULL,
  `EPS/NY` double DEFAULT NULL,
  `EPS/P5Y` double DEFAULT NULL,
  `EPS/N5Y` double DEFAULT NULL,
  `ATR` double DEFAULT NULL,
  `SMA20` double DEFAULT NULL,
  `SMA50` double DEFAULT NULL,
  `SMA200` double DEFAULT NULL,
  `50dHi` double DEFAULT NULL,
  `50dLo` double DEFAULT NULL,
  `52wHi` double DEFAULT NULL,
  `52wLo` double DEFAULT NULL,
  `RSI` double DEFAULT NULL,
  `AnRec` double DEFAULT NULL,
  `Price` double DEFAULT NULL,
  `Volume` int(11) DEFAULT NULL,
  `EarnDate` varchar(25) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `TgtPrice` double DEFAULT NULL,
  `Date` date NOT NULL,
  PRIMARY KEY (`Tkr`,`Date`),
  KEY `idx_Date` (`Date`),
  KEY `idx_Sector` (`Sector`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `OpenOptionFIFO`
--

DROP TABLE IF EXISTS `OpenOptionFIFO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OpenOptionFIFO` (
  `DMAcctId` int(10) NOT NULL DEFAULT '0',
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StrikePrice` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `DtExpire` date NOT NULL,
  `GMTDtTrade` datetime NOT NULL,
  `GMTDtSettle` datetime DEFAULT NULL,
  `ShPerCtrct` int(5) NOT NULL DEFAULT '0',
  `Units` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `UnitPrice` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `CurrPrice` decimal(19,4) DEFAULT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT '0.0000',
  `Commission` decimal(19,4) DEFAULT '0.0000',
  `Taxes` decimal(19,4) DEFAULT '0.0000',
  `Fees` decimal(19,4) DEFAULT '0.0000',
  `TransLoad` decimal(19,4) DEFAULT '0.0000',
  `Total` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptTransType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT 'null',
  `OpeningOpen` decimal(19,4) DEFAULT '0.0000',
  `OpeningHigh` decimal(19,4) DEFAULT '0.0000',
  `OpeningLow` decimal(19,4) DEFAULT '0.0000',
  `OpeningAdjClose` decimal(19,4) DEFAULT '0.0000',
  `ClientSectorId` int(10) DEFAULT NULL,
  `MktVal` decimal(19,4) DEFAULT NULL,
  `LMktVal` decimal(19,4) DEFAULT NULL,
  `ActPct` decimal(19,4) DEFAULT NULL,
  `GainPct` varchar(45) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `OpenOptions`
--

DROP TABLE IF EXISTS `OpenOptions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OpenOptions` (
  `ClientAcctName` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GMTDtTrade` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `ShPerCtrct` int(5) NOT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptTransType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `AdjCloseDate` date NOT NULL,
  `AdjClose` decimal(19,4) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `OpenStockFIFO`
--

DROP TABLE IF EXISTS `OpenStockFIFO`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OpenStockFIFO` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GMTDtTrade` datetime NOT NULL,
  `GMTDtSettle` datetime DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `CurrPrice` decimal(19,4) DEFAULT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StockTransType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `GainPct` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `OpeningDebt`
--

DROP TABLE IF EXISTS `OpeningDebt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OpeningDebt` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GMTDtTrade` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `GMTDtSettle` timestamp NULL DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `AccrdInt` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_AcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `OpeningMF`
--

DROP TABLE IF EXISTS `OpeningMF`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OpeningMF` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GMTDtTrade` timestamp NULL DEFAULT NULL,
  `GMTDtSettle` timestamp NOT NULL DEFAULT '1970-01-01 06:00:00',
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `BuyType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `RelFiTID` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_DMAcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `OpeningOptions`
--

DROP TABLE IF EXISTS `OpeningOptions`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OpeningOptions` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StrikePrice` decimal(19,4) NOT NULL,
  `DtExpire` date NOT NULL,
  `GMTDtTrade` datetime NOT NULL,
  `GMTDtSettle` datetime DEFAULT NULL,
  `ShPerCtrct` int(5) NOT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptTransType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `OpeningOpen` decimal(19,4) DEFAULT NULL,
  `OpeningHigh` decimal(19,4) DEFAULT NULL,
  `OpeningLow` decimal(19,4) DEFAULT NULL,
  `OpeningAdjClose` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `idx_TkrDtTradeUnitsFiTId` (`Ticker`,`GMTDtTrade`,`Units`,`FiTId`),
  UNIQUE KEY `idx_TradeDateUnitsFiTId` (`GMTDtTrade`,`Units`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `OpeningOther`
--

DROP TABLE IF EXISTS `OpeningOther`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OpeningOther` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(120) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `GMTDtTrade` timestamp NULL DEFAULT NULL,
  `GMTDtSettle` timestamp NOT NULL DEFAULT '1970-01-01 06:00:00',
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_DMAcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `OpeningStock`
--

DROP TABLE IF EXISTS `OpeningStock`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `OpeningStock` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `GMTDtTrade` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `GMTDtSettle` timestamp NULL DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MarkUpDn` decimal(19,4) DEFAULT NULL,
  `Commission` decimal(19,4) DEFAULT NULL,
  `Taxes` decimal(19,4) DEFAULT NULL,
  `Fees` decimal(19,4) DEFAULT NULL,
  `TransLoad` decimal(19,4) DEFAULT NULL,
  `Total` decimal(19,4) NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SubAcctSec` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SubAcctFund` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `StockTransType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ReversalFiTId` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`FiTId`),
  UNIQUE KEY `pk_DMAcctIdFiTId` (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PosOpt`
--

DROP TABLE IF EXISTS `PosOpt`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `PosOpt` (
  `DMAcctId` int(10) NOT NULL,
  `InvPosId` int(10) NOT NULL,
  `DtAsOf` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Equityid` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `PosType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ShPerCtrct` int(5) NOT NULL,
  `HeldInAccount` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MktVal` decimal(19,4) NOT NULL,
  `DtPriceAsOf` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Memo` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Inv401kSource` char(20) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Secured` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`InvPosId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PosStock`
--

DROP TABLE IF EXISTS `PosStock`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `PosStock` (
  `DMAcctId` int(10) NOT NULL,
  `InvPosId` int(10) NOT NULL,
  `DtAsOf` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `PosType` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `HeldInAccount` char(15) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MktVal` decimal(19,4) NOT NULL,
  `DtPriceAsOf` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Memo` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Inv401kSource` char(20) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Secured` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `UnitsStreet` decimal(19,4) DEFAULT NULL,
  `UnitsUser` decimal(19,4) DEFAULT NULL,
  `ReinvDiv` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`InvPosId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PosStockOption`
--

DROP TABLE IF EXISTS `PosStockOption`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `PosStockOption` (
  `DMAcctId` int(10) NOT NULL,
  `InvPosId` int(10) NOT NULL,
  `DtAsOf` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `SecId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `SecName` char(120) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClientSectorId` int(10) DEFAULT NULL,
  `EquityType` char(25) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `PosType` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ShPerCtrct` int(5) NOT NULL,
  `HeldInAccount` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MktVal` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `LeveragedMktVal` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `ActPct` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `DtPriceAsOf` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `CurSym` char(3) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Memo` char(255) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Inv401kSource` char(20) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `Secured` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `UnitsStreet` decimal(19,4) DEFAULT NULL,
  `UnitsUser` decimal(19,4) DEFAULT NULL,
  `ReinvDiv` decimal(19,4) DEFAULT NULL,
  PRIMARY KEY (`DMAcctId`,`InvPosId`),
  KEY `EquityType` (`EquityType`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `PosStockOption2`
--

DROP TABLE IF EXISTS `PosStockOption2`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `PosStockOption2` (
  `DMAcctId` int(10) NOT NULL,
  `FiTId` char(255) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `EquityId` char(32) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `Ticker` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `ClientSectorId` int(10) DEFAULT NULL,
  `EquityType` char(25) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `PosType` char(12) COLLATE utf8mb4_unicode_520_ci NOT NULL,
  `OptType` char(15) COLLATE utf8mb4_unicode_520_ci DEFAULT NULL,
  `ShPerCtrct` int(5) NOT NULL,
  `Units` decimal(19,4) NOT NULL,
  `UnitPrice` decimal(19,4) NOT NULL,
  `MktVal` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `LMktVal` decimal(19,4) NOT NULL DEFAULT '0.0000',
  `ActPct` decimal(19,4) NOT NULL DEFAULT '0.0000',
  PRIMARY KEY (`DMAcctId`,`FiTId`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_520_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `Version`
--

DROP TABLE IF EXISTS `Version`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `Version` (
  `Version` varchar(25) NOT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Table structure for table `equity_client_events`
--

DROP TABLE IF EXISTS `equity_client_events`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `equity_client_events` (
  `Tkr` char(120) NOT NULL,
  `Date` date NOT NULL,
  `Event` char(255) NOT NULL,
  PRIMARY KEY (`Tkr`,`Date`),
  UNIQUE KEY `Date` (`Date`),
  KEY `Tkr` (`Tkr`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping routines for database 'dmOfx'
--
/*!50003 DROP FUNCTION IF EXISTS `ConvertDateTime2GMT` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` FUNCTION `ConvertDateTime2GMT`(Dt VARCHAR(32)) RETURNS varchar(32) CHARSET utf8
reads sql data deterministic
BEGIN
DECLARE convertedDateTime varchar(32);
set convertedDateTime = date_sub(concat(
substring(Dt, 1, 4), "-",
substring(Dt, 5, 2), "-",
substring(Dt, 7, 2), " ",
substring(Dt, 9, 2), ":",
substring(Dt, 11, 2), ":",
substring(Dt, 13, 2)), 
interval -(substring(Dt,
instr(Dt, "[") + 1, instr(Dt, ":") - 
(instr(Dt, "[") + 1))) hour);
  RETURN convertedDateTime;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP FUNCTION IF EXISTS `convert_ofxTextDate_ISODate` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` FUNCTION `convert_ofxTextDate_ISODate`(Dt VARCHAR(32)) RETURNS varchar(32) CHARSET utf8
reads sql data deterministic
BEGIN
DECLARE convertedDateTime varchar(32);
set convertedDateTime = concat(
substring(Dt, 1, 4), "-",
substring(Dt, 5, 2), "-",
substring(Dt, 7, 2));
  RETURN convertedDateTime;
RETURN 1;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `a1test` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `a1test`()
BEGIN
/* until get to 'positions' rather than 'transactions'
	only use long calls and long stock

	there can be a case where CEA does not have a ticker
    that Opt does, resulting in a possible null condition
*/
declare selectOpt varchar(1000);
declare selectStk varchar(1000);
/* get the right set of data from PosOpt 
	only want LONG and CALL positions
*/
set selectOpt = "select CEA.Tkr, sum(Units * ShPerCtrct * CEA.StkPrice) as LMktValue
				from PosOpt as Opt, ClientEquityAttributes as CEA
				where Opt.Tkr = CEA.Tkr and Opt.PosType = 'LONG' and Opt.OptType = 'CALL'
				group by Tkr
				order by Tkr";

/* get the right set of data from PosStock 
	only want LONG positions
*/
set selectStk = "select CEA.Tkr, sum(Units * CEA.StkPrice) as LMktValue
				from PosStock as Stk, ClientEquityAttributes as CEA
				where Stk.Tkr = CEA.Tkr and Stk.PosType = 'LONG'
				group by Tkr
				order by Tkr";

update ClientEquityAttributes as CEA

/* right join selectOpt to CEA as Opt
	left join Opt to select Stk as Stk
    
    mktVal = Opt.LMktVal + Stk.LMktVal
*/


right join (select CEA.Tkr, sum(Units * ShPerCtrct * CEA.StkPrice) as LMktValue
				from PosOpt as Opt, ClientEquityAttributes as CEA
				where Opt.Tkr = CEA.Tkr and Opt.PosType = 'LONG' and Opt.OptType = 'CALL'
				group by Tkr
				order by Tkr) as Opt on CEA.Tkr = Opt.Tkr
/*
left join (select CEA.Tkr, sum(Units * CEA.StkPrice) as LMktValue
				from PosStock as Stk, ClientEquityAttributes as CEA
				where Stk.Tkr = CEA.Tkr and Stk.PosType = 'LONG'
				group by Tkr
				order by Tkr) as Stk on Opt.Tkr = Stk.Tkr
*/

set CEA.MktValue = Opt.LMktValue

;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Accounts_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `Accounts_insert`()
BEGIN
  insert into dmOfx.Accounts (BrokerId, 
  AcctId, Org, FId, BrokerIdFi, InvAcctIdFi) 

  SELECT Accounts.BrokerId, Accounts.AcctId, Brokers.Org, Brokers.FId, 
  Brokers.BrokerIdFi, Accounts.InvAcctIdFi 
  FROM dbOfx.Accounts AS Accounts, dbOfx.Brokers AS Brokers 
  WHERE Accounts.BrokerId = Brokers.BrokerId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Accounts_retrieveAccounts` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `Accounts_retrieveAccounts`()
BEGIN
/* used in application to retrieve all account info */

select Accounts.DMAcctId, BrokerId, AcctId, Org, FId, InvAcctIdFi, ClientAcctName 

from Accounts, ClientAccts

where Accounts.DMAcctId = ClientAccts.DMAcctId
	and ClientAccts.Active = "Yes"

;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Bal_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `Bal_insert`()
BEGIN
insert into dmOfx.Balances
  (DMAcctId, `Name`, Descr, BalType, `Value`, DtAsOf, CurSym) 
  
SELECT Accounts.DMAcctId, `Name`, Descr, BalType, `Value`, DtAsOf, CurSym

FROM dbOfx.Bal as Bal, dmOfx.Accounts as Accounts

where Bal.AcctId = Accounts.AcctId;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Brokers_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `Brokers_insert`()
BEGIN
insert into dmOfx.Brokers (BrokerId, Org, FId, BrokerIdFi) 
  SELECT BrokerId, Org, FId, BrokerIdFi FROM dbOfx.Brokers;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `build_datamart` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `build_datamart`()
BEGIN
  call ClientSectorList_insertCash;		/* ensure first to get 1 as index 				*/
  call ClientSectorList_insert;			/* all FinVizInfo Sectors in ClientSectorList 	*/
  call ClientEquityAttributes_insert;	/* all tickers to table 						*/
  call EquityHistory_update;			/* use CEA to get price data 					*/
  call ClientEquityAttributes_update;	/* update CEA with latest price 				*/
  call Brokers_insert;					/* dbOfx data */
  call Accounts_insert;					/* dbOfx data */
  call ClientAccts_insert;				/* dbOfx data */
  call ClientTransferData_insert;		/* dbOfx data */
  call OpeningDebt_insert;				/* dbOfx data */
  call ClosingDebt_insert;				/* dbOfx data */
  call OpeningMF_insert;				/* dbOfx data */
  call ClosingMF_insert;				/* dbOfx data */

  call OpeningOptionsSellOpt_insert;	/* dbOfx data */
  call ClosingOptionsSellOpt_insert;	/* dbOfx data */
  call OpeningOptionsBuyOpt_insert;		/* dbOfx data */
  call ClosingOptionsBuyOpt_insert;		/* dbOfx data */
  call OpeningOtherBuyOther_insert;		/* dbOfx data */
  call OpeningOtherSellOther_insert;	/* dbOfx data */
  call OpeningStockBuyStock_insert; 	/* dbOfx data */
  call ClosingStockBuyStock_insert; 	/* dbOfx data */
  call OpeningStockSellStock_insert;	/* dbOfx data */
  call ClosingStockSellStock_insert;	/* dbOfx data */
  call TransfersOpeningDebt_insert; 	/* dbOfx data */
  call TransfersClosingDebt_insert; 	/* dbOfx data */
  call TransfersOpeningMF_insert; 		/* dbOfx data */
  call TransfersClosingMF_insert; 		/* dbOfx data */
  call TransfersOpeningOptions_insert; 	/* dbOfx data */
  call TransfersClosingOptions_insert; 	/* dbOfx data */
  call TransfersOpeningOther_insert;	/* dbOfx data */
  call TransfersClosingOther_insert;	/* dbOfx data */
  call TransfersOpeningStock_insert; 	/* dbOfx data */
  call TransfersClosingStock_insert;	/* dbOfx data */
  call ClosingOptionsClosureOpt_insert;	/* dbOfx data */
  call PosOpt_insert;					/* dbOfx data */
  call PosStock_insert;					/* dbOfx data */
  call Bal_insert;						/* dbOfx data */
  
  call OpeningOptionsPrices_update;		/* add opening date price data to OpeningOptions */
  call ClosingOptionsPrices_update;		/* add closing date price data to ClosingOptions */

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientAccts_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientAccts_insert`()
BEGIN
insert ignore into dmOfx.ClientAccts (dmOfx.ClientAccts.DMAcctId, 
  dmOfx.ClientAccts.ClientAcctName)


SELECT dmOfx.Accounts.DMAcctId, 
  concat_ws("_", dmOfx.Accounts.BrokerIdFi, dmOfx.Accounts.InvAcctIdFi) as ClientAcctName

FROM dmOfx.Accounts;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributes2_updateApp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributes2_updateApp`(
	in _ticker char(120), 
    /*in _tkrAlpha char(120), */
    in _dlHistory char(3),
    /*in _clientSectorId int(10), */
    in _tgtPct decimal(19,4), 
    /*in _anTgt decimal(19,4),*/
    in _desc varchar(255), in _tgtLck char(3)
)
BEGIN
/* used from the application to update the table from the gui */
update ClientEquityAttributes

set /*Tkr_AlphaVantage = _tkrAlpha,*/
	DLHistory = _dlHistory,
    /*ClientSectorId = _clientSectorId,*/
    TgtPct = _tgtPct,
    /*AnalystTgt = _anTgt,*/
    Description = _desc,
    TgtLocked = _tgtLck
    
    where Ticker = _ticker;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributesActive_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributesActive_update`()
BEGIN
/**
*** ensures Active flag set appropriately if there is a position
**/
update ClientEquityAttributes

set DLHistory = if(isnull(ActPct),
	if(isnull(TgtPct),DLHistory, if(TgtPct > 0, "Yes", DLHistory)),
    if(ActPct > 0, "Yes", DLHistory));

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributesActPct2_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributesActPct2_update`()
BEGIN
/** adds actual portfolio percent to table
*** ensures Active flag set appropriately if there is a position
**/
update ClientEquityAttributes

set ActPct = (
	Select sum(ActPct)
	from PosStockOption2
	where ClientEquityAttributes.Ticker = PosStockOption2.Ticker
	group by PosStockOption2.Ticker
    );
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributesActPct_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributesActPct_update`()
BEGIN
/** adds actual portfolio percent to table
*** ensures Active flag set appropriately if there is a position
**/
update ClientEquityAttributes

set ActPct = (
	Select sum(PosStockOption.ActPct)
	from PosStockOption
	where ClientEquityAttributes.Ticker = PosStockOption.Ticker
	group by PosStockOption.Ticker
    );
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributesAnalyst_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributesAnalyst_update`()
BEGIN
/* adds latest closing price to table */
update ClientEquityAttributes as C

inner join (select Tkr, MAX(`Date`) AS `Date`
		FROM FinVizInfo
        GROUP BY Tkr
        ORDER BY Tkr ASC) as A 
			on C.Ticker = A.Tkr
        
inner join FinVizInfo on FinVizInfo.`Date` = A.`Date` 
	and FinVizInfo.Tkr = A.Tkr
    
set C.AnalystTgt = FinVizInfo.TgtPrice

where A.`Date` = FinVizInfo.`Date` 
	and C.Ticker = A.Tkr;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributesCash_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributesCash_update`(
	in _sectorId int(10), in _tgtPct decimal(19,4))
BEGIN
/* used from the application to update the table from the gui */
update ClientEquityAttributes

set TgtPct = _tgtPct
    
    where _sectorId = ClientSectorId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributes_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributes_insert`()
BEGIN
/* ensure all tickers from dmOfx are in the table */
insert ignore into `dmOfx`.`ClientEquityAttributes`
	(Ticker, Tkr_AlphaVantage, DLHistory, ClientSectorId)

select distinct SecInfo.Ticker, SecInfo.Ticker, "Yes", ClientSectorList.ClientSectorId

from dbOfx.SecInfo as SecInfo, dmOfx.FinVizInfo as FinVizInfo,
	dmOfx.ClientSectorList as ClientSectorList

where SecInfo.Ticker = FinVizInfo.Tkr
	and FinVizInfo.Sector = ClientSectorList.ClientSector
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributes_insertApp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributes_insertApp`(
	in _ticker char(120), in _tkrAlpha char(120), in _dlHistory char(3),
    in _clientSectorId int(10), in _tgtPct decimal(19,4), in _anTgt decimal(19,4),
    in _desc varchar(255), in _tgtLck char(3))
BEGIN
/* used from the application to add to the table from the gui */
insert into ClientEquityAttributes (Ticker, Tkr_AlphaVantage, DLHistory,
		ClientSectorId, TgtPct, AnalystTgt, Description, TgtLocked)
	values
    (_ticker, _tkrAlpha, _dlHistory, _clientSectorId, _tgtPct, _anTgt, _desc, _tgtLck)

    ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributes_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributes_update`()
BEGIN
/* adds latest closing price to table */
update ClientEquityAttributes as C

inner join (select Tkr_AlphaVantage, MAX(`Date`) AS `Date`
		FROM dmOfx.EquityHistory
        GROUP BY Tkr_AlphaVantage
        ORDER BY Tkr_AlphaVantage ASC) as A 
			on C.Tkr_AlphaVantage = A.Tkr_AlphaVantage
        
inner join EquityHistory on EquityHistory.`Date` = A.`Date` 
	and EquityHistory.Tkr_AlphaVantage = A.Tkr_AlphaVantage
    
set C.StkPrice = EquityHistory.AdjClose

where A.`Date` = EquityHistory.`Date` 
	and C.Tkr_AlphaVantage = A.Tkr_AlphaVantage;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributes_updateActPct` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributes_updateActPct`()
BEGIN
/** adds actual portfolio percent to table
*** ensures Active flag set appropriately if there is a position
**/
update ClientEquityAttributes

set ActPct = (
	Select sum(ActPct)
	from FIFOPositions
	where ClientEquityAttributes.Ticker = FIFOPositions.Ticker
	group by FIFOPositions.Ticker
    );
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityAttributes_updateApp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityAttributes_updateApp`(
	in _ticker char(120), in _tkrAlpha char(120), in _dlHistory char(3),
    in _clientSectorId int(10), in _tgtPct decimal(19,4), in _anTgt decimal(19,4),
    in _desc varchar(255), in _tgtLck char(3)
)
BEGIN
/* used from the application to update the table from the gui */
update ClientEquityAttributes

set Tkr_AlphaVantage = _tkrAlpha,
	DLHistory = _dlHistory,
    ClientSectorId = _clientSectorId,
    TgtPct = _tgtPct,
    AnalystTgt = _anTgt,
    Description = _desc,
    TgtLocked = _tgtLck
    
    where Ticker = _ticker;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityList_retrieveAll` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityList_retrieveAll`()
BEGIN
/* used in application to populate ClientSectorList table for editing. */
SELECT Ticker, DLHistory, ActPct, TgtPct, TgtLocked, Description, 
	Tkr_AlphaVantage, ClientSectorId, AnalystTgt, StkPrice
FROM ClientEquityAttributes order by TgtPct desc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientEquityList_retrieveAllForSector` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientEquityList_retrieveAllForSector`(
	in _sectorId Integer(10), in _active Boolean)
BEGIN
/* used in application to populate ClientSectorList table for editing.
/* tried sort by ActPct but prefer by TgtPct as that is what we work on */
SELECT * FROM ClientEquityAttributes 

where ClientSectorId = _sectorId
	and DLHistory like if(_active, "Yes", "%")

order by TgtPct desc, ActPct desc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList2_updateApp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList2_updateApp`(
	in _id int(10), in _sector varchar(255), in _short varchar(10),
    in _active varchar(3), in _tgtPct decimal(19,4), in _desc varchar(255), 
    in _tgtLck char(3), in _actPct decimal(19,4), in _MktVal decimal(19,4),
    in _lMktVal decimal(19,4), in _customSector int(1)
)
BEGIN
/* used from the application to update the table from the gui */
update ClientSectorList

set ClientSector = _sector,
	CSecShort = _short,
    Active = _active,
    TgtPct = _tgtPct,
    Description = _desc,
    TgtLocked = _tgtLck,
    ActPct = _actPct,
    MktVal = _mktVal,
    LeveragedMktVal = _lMktVal,
    CustomSector = _customSector
    
    where _id = ClientSectorId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorListActive_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorListActive_update`()
BEGIN
/** 
*** ensures Active flag set appropriately if there is a position
**/
update ClientSectorList

set Active = if(isnull(ActPct),
	if(isnull(TgtPct), Active, if(TgtPct > 0, "Yes", Active)),
    if(ActPct > 0, "Yes", Active));
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorListActPct_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorListActPct_update`()
BEGIN
/* update the actual portfolio percent for each sector */
declare total decimal(19,4);
set total = (select sum(LeveragedMktVal) from ClientSectorList);

update ClientSectorList


set ActPct = if (isnull(LeveragedMktVal), 0, round(100 * (LeveragedMktVal / total), 4));


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorListMktLMktValue2_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorListMktLMktValue2_update`()
BEGIN
/* add sector MktVal and LeveragedMktVal */
/* need to add ClientSector to PosStockOption, eliminate a join here */
update ClientSectorList as CSL

left join (select ClientSectorId, sum(MktVal) as sumMktVal, 
		sum(LMktVal) as sumLMktVal
		from PosStockOption2 as PSO
        where PosType = "LONG"
        group by ClientSectorId) A
	on A.ClientSectorId = CSL.ClientSectorId

set CSL.MktVal = if(isnull(A.sumMktVal), 0, A.sumMktVal),
	CSL.LeveragedMktVal = if(isnull(A.sumLMktVal), 0, A.sumLMktVal)
    
    ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorListMktLMktValue_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorListMktLMktValue_update`()
BEGIN
/* add sector MktVal and LeveragedMktVal */
/* need to add ClientSector to PosStockOption, eliminate a join here */
update ClientSectorList as CSL

left join (select ClientSectorId, sum(MktVal) as sumMktVal, 
		sum(LeveragedMktVal) as sumLeveragedMktVal
		from PosStockOption as PSO
        where PosType = "LONG"
        group by ClientSectorId) A
	on A.ClientSectorId = CSL.ClientSectorId

set CSL.MktVal = if(isnull(A.sumMktVal), 0, A.sumMktVal),
	CSL.LeveragedMktVal = if(isnull(A.sumLeveragedMktVal), 0, A.sumLeveragedMktVal)
    
    ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorListMoveEquity_App` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorListMoveEquity_App`(
_clientSectorId int(10))
BEGIN
/* used by app to move equities from custom sector back to core sector */
update ClientEquityAttributes as CEA

inner join (select Tkr, Sector, max(`Date`) as maxDate
				from FinVizInfo
				group by FinVizInfo.Tkr, FinVizInfo.Sector) as A
				on CEA.Ticker = A.Tkr

inner join ClientSectorList on A.Sector = ClientSectorList.ClientSector

set CEA.ClientSectorId = ClientSectorList.ClientSectorId

where CEA.ClientSectorId = _clientSectorId;


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_insert`()
BEGIN
/* ensure all FinVizInfo Sectors in ClientSectorList */
insert ignore into ClientSectorList
	(ClientSectorId, ClientSector, CSecShort, TgtPct, TgtLocked, 
    ActPct, MktVal, LeveragedMktVal, CustomSector)

select distinct null, Sector, 
	if (char_length(Sector) > 10, substr(Sector, 0, 10), Sector),
	0.0, "No", 0.0, 0.0, 0.0, 0

from FinVizInfo
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_insertCash` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_insertCash`()
BEGIN
/* ensure all FinVizInfo Sectors in ClientSectorList */
insert ignore into ClientSectorList
	(ClientSectorId, ClientSector, CSecShort, TgtPct, TgtLocked, 
    ActPct, MktVal, LeveragedMktVal, CustomSector)

select distinct null, "Cash", "Cash", 0.0, "No", 0.0, 0.0, 0.0, 0

;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_retrieveAll` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_retrieveAll`()
BEGIN
/* likely a duplicate */
SELECT * FROM dmOfx.ClientSectorList order by TgtPct desc, ClientSector asc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_retrieveAllByCSecShort` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_retrieveAllByCSecShort`()
BEGIN
/* used in application to populate ClientSectorList table for editing.
/* tried sort by ActPct but prefer by TgtPct as that is what we work on */
SELECT * FROM dmOfx.ClientSectorList order by CSecShort;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_retrieveAllBySector` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_retrieveAllBySector`()
BEGIN
/* used in application to populate ClientSectorList table for editing.
/* tried sort by ActPct but prefer by TgtPct as that is what we work on */
SELECT * FROM dmOfx.ClientSectorList order by ClientSector;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_retrieveAllByTgt` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_retrieveAllByTgt`()
BEGIN
/* used in application to populate ClientSectorList table for editing.
/* tried sort by ActPct but prefer by TgtPct as that is what we work on */
select ClientSectorList.ClientSectorId, ClientSectorList.ClientSector, 
	ClientSectorList.CSecShort, ClientSectorList.Active, 
    ClientSectorList.TgtLocked, ClientSectorList.CustomSector, 
    ClientSectorList.TgtPct, ClientSectorList.MktVal, ClientSectorList.LeveragedMktVal, 
    ClientSectorList.Description, sum(ClientEquityAttributes.ActPct) as ActPct

from /*ClientEquityAttributes as CEA, ClientSectorList as CSL*/

ClientEquityAttributes right join ClientSectorList 
	on ClientEquityAttributes.ClientSectorId = ClientSectorList.ClientSectorId
/*where CEA.ClientSectorId = CSL.ClientSectorId*/

group by ClientSectorList.ClientSectorId, ClientSectorList.ClientSector, 
	ClientSectorList.CSecShort, ClientSectorList.TgtLocked, ClientSectorList.CustomSector

order by TgtPct desc, ClientSector asc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_updateActPct` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_updateActPct`()
BEGIN
/* update the actual portfolio percent for each sector */
declare total decimal(19,4);
set total = (select sum(LeveragedMktVal) from ClientSectorList);

update ClientSectorList


set ActPct = if (isnull(LeveragedMktVal), 0, round(100 * (LeveragedMktVal / total), 4));


END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_updateApp` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_updateApp`(
	in _id int(10), in _sector varchar(255), in _short varchar(10), 
    in _tgtPct decimal(19,4), in _desc varchar(255), in _tgtLck char(3)
)
BEGIN
/* used from the application to update the table from the gui */
update ClientSectorList

set ClientSector = _sector,
	CSecShort = _short,
    TgtPct = _tgtPct,
    Description = _desc,
    TgtLocked = _tgtLck
    
    where _id = ClientSectorId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientSectorList_updateVals` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientSectorList_updateVals`()
BEGIN
/* add sector MktVal and LeveragedMktVal */
update ClientSectorList as CSL

left join (select ClientSectorId, sum(MktVal) as sumMktVal, 
		sum(LMktVal) as sumLMktVal
		from FIFOPositions as FSO
        where PosType = "LONG"
        group by ClientSectorId) A
	on A.ClientSectorId = CSL.ClientSectorId

set CSL.MktVal = if(isnull(A.sumMktVal), 0, A.sumMktVal),
	CSL.LeveragedMktVal = if(isnull(A.sumLMktVal), 0, A.sumLMktVal)
    
    ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClientTransferData_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClientTransferData_insert`()
BEGIN

insert ignore into dmOfx.ClientTransferData
SELECT 
    Accounts.DMAcctId,
    Transfer.FiTId,
    Transfer.SecId,
    Transfer.SubAcctSec,
    Transfer.TFerAction,
    Transfer.Units,
    IF(Transfer.AvgCostBasis IS NULL, 0, Transfer.AvgCostBasis) as CostBasis,
    CONVERTDATETIME2GMT(InvTran.DtSettle)  as GMTDtSettle,
    IF(Transfer.DtPurchase IS NULL, '1970-01-01 00:00:00',
        CONVERTDATETIME2GMT(Transfer.DtPurchase)) as GMTDtPurchase
FROM
    dbOfx.Transfer AS Transfer,
    dbOfx.InvTran AS InvTran,
    dmOfx.Accounts AS Accounts
WHERE
    Transfer.FiTId = InvTran.FiTId
        AND Transfer.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingDebt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingDebt_insert`()
BEGIN
INSERT INTO ClosingDebt
  (DMAcctId, FiTId, SecId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad, 
  Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId, AccrdInt,
  SellReason) 
SELECT Accounts.DMAcctId, SellDebt.FiTId, InvSell.SecId, 
  SecInfo.SecName, SecInfo.Ticker, 
  convertDateTime2GMT(InvTran.DtTrade) as GMTDtTrade,
  convertDateTime2GMT(InvTran.DtSettle) as GMTDtSettle,
  InvSell.Units, InvSell.UnitPrice, InvSell.MarkDown, 
  InvSell.Commission, InvSell.Taxes, InvSell.Fees, InvSell.TransLoad, 
  InvSell.Total, InvSell.CurSym, InvSell.SubAcctSec, InvSell.SubAcctFund, 
  InvTran.ReversalFiTId, SellDebt.AccrdInt, SellDebt.SellReason 
  
  FROM dbOfx.InvSell AS InvSell, dbOfx.SellDebt AS SellDebt, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, dbOfx.SecInfo AS SecInfo,
  dmOfx.Accounts AS Accounts
  
  WHERE InvSell.AcctId = SellDebt.AcctId AND InvSell.FiTId = SellDebt.FiTId 
  AND InvTran.AcctId = InvSell.AcctId AND InvTran.FiTId = InvSell.FiTId 
  AND SecId.SecId = InvSell.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND SecId.BrokerId = Accounts.BrokerId
  AND SellDebt.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingMF_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingMF_insert`()
BEGIN
INSERT INTO ClosingMF (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, 
GMTDtSettle, Units, UnitPrice, MarkUpDn, Commission, Taxes, 
Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, 
ReversalFiTId, SellType, RelFiTID, AvgCostBasis)

SELECT Accounts.DMAcctId, SellMF.FiTId, InvSell.SecId, SecInfo.EquityId,
SecInfo.SecName, SecInfo.Ticker, 
CONVERTDATETIME2GMT(InvTran.DtTrade) as GMTDtTrade,
CONVERTDATETIME2GMT(InvTran.DtSettle) as GMTDtSettle,
InvSell.Units, InvSell.UnitPrice, InvSell.MarkDown, 
InvSell.Commission, InvSell.Taxes, InvSell.Fees, InvSell.TransLoad, 
InvSell.Total, InvSell.CurSym, InvSell.SubAcctSec, InvSell.SubAcctFund, 
InvTran.ReversalFiTId, SellMF.SellType, SellMF.RelFiTId,
SellMF.AvgCostBasis

FROM dbOfx.InvSell AS InvSell, dbOfx.SellMF AS SellMF, 
dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, 
dbOfx.SecInfo AS SecInfo, dmOfx.Accounts AS Accounts

WHERE InvSell.AcctId = SellMF.AcctId AND InvSell.FiTId = SellMF.FiTId 
AND InvTran.AcctId = InvSell.AcctId AND InvTran.FiTId = InvSell.FiTId 
AND SecId.SecId = InvSell.SecId AND SecInfo.BrokerId = SecId.BrokerId 
AND SecInfo.SecId = SecId.SecId AND SecId.BrokerId = Accounts.BrokerId
AND SellMF.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingOptionsBuyOpt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingOptionsBuyOpt_insert`()
BEGIN
insert ignore into dmOfx.ClosingOptions 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, 
  StrikePrice, DtExpire, GMTDtTrade, GMTDtSettle, ShPerCtrct, Units, 
  UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad, Total, 
  CurSym, SubAcctSec, SubAcctFund, OptTransType, ReversalFiTId, RelFiTId,
  RelType, Secured)
  
SELECT Accounts.DMAcctId, Opt.FiTId, Inv.SecId, SecInfo.EquityId,
  SecInfo.SecName, SecInfo.Ticker, OptInfo.OptType, 
  OptInfo.StrikePrice, 
  str_to_date(left(OptInfo.DtExpire, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtTrade, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtSettle, 8), "%Y%m%d"),
  Opt.ShPerCtrct, Inv.Units, Inv.UnitPrice, Inv.Markup, 
  Inv.Commission, Inv.Taxes, Inv.Fees, Inv.TransLoad, 
  Inv.Total, Inv.CurSym, Inv.SubAcctSec, Inv.SubAcctFund, 
  Opt.OptBuyType, InvTran.ReversalFiTId, null, null, null

FROM dbOfx.InvBuy AS Inv, dbOfx.BuyOpt AS Opt, dbOfx.OptInfo,
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, dbOfx.SecInfo AS SecInfo,
  dmOfx.Accounts AS Accounts

WHERE Inv.AcctId = Opt.AcctId 
	AND Inv.FiTId = Opt.FiTId 
	AND InvTran.AcctId = Inv.AcctId 
    AND InvTran.FiTId = Inv.FiTId 
	AND SecId.SecId = Inv.SecId 
    AND SecInfo.BrokerId = SecId.BrokerId 
	AND SecInfo.SecId = SecId.SecId 
    AND Opt.OptBuyType = 'BUYTOCLOSE' 
    and SecInfo.BrokerId = OptInfo.BrokerId
    and SecInfo.SecId = OptInfo.SecId
	AND SecId.BrokerId = Accounts.BrokerId
	AND Opt.AcctId = Accounts.AcctId
  
  order by SecInfo.EquityId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingOptionsClosureOpt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingOptionsClosureOpt_insert`()
BEGIN
INSERT ignore INTO ClosingOptions 
	(DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, 
    StrikePrice, DtExpire, GMTDtTrade, GMTDtSettle, ShPerCtrct, Units, 
    UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad, Total, 
    CurSym, SubAcctSec, SubAcctFund, OptTransType, ReversalFiTId, RelFiTId, RelType, Secured)

select Accounts.DMAcctId, ClosureOpt.FiTId, ClosureOpt.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, OptInfo.OptType, OptInfo.StrikePrice, 
  str_to_date(left(DtExpire, 8), "%Y%m%d"), 
  str_to_date(left(InvTran.DtTrade, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtSettle, 8), "%Y%m%d") as TradeDt,
  ClosureOpt.ShPerCtrct, ClosureOpt.Units, 0, Null, Null, Null, Null, Null, 0, Null,
  ClosureOpt.SubAcctSec, ClosureOpt.OptAction, ClosureOpt.OptAction,
  InvTran.ReversalFiTId, ClosureOpt.RelFiTId, Null, Null

from dbOfx.ClosureOpt as ClosureOpt, dbOfx.InvTran as InvTran, dbOfx.OptInfo,
  dbOfx.SecInfo as SecInfo,
  dmOfx.Accounts as Accounts

where ClosureOpt.AcctId = InvTran.AcctId
	and ClosureOpt.FiTId = InvTran.FiTId
	and ClosureOpt.SecId = SecInfo.SecId
	and ClosureOpt.AcctId = Accounts.AcctId
	and ClosureOpt.OptAction = "EXPIRE"
        and SecInfo.BrokerId = OptInfo.BrokerId
    and SecInfo.SecId = OptInfo.SecId
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingOptionsPrices_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingOptionsPrices_update`()
BEGIN
update ClosingOptions CO

join ClientEquityAttributes CEA on CO.Ticker = CEA.Ticker
join EquityHistory DLHistory on CEA.Tkr_AlphaVantage = DLHistory.Tkr_AlphaVantage

set	CO.ClosingOpen = DLHistory.`Open`,
	CO.ClosingHigh = DLHistory.High,
	CO.ClosingLow = DLHistory.Low,
	CO.ClosingAdjClose = DLHistory.AdjClose

where DLHistory.`Date` = cast(CO.GMTDtTrade as date)
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingOptionsSellOpt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingOptionsSellOpt_insert`()
BEGIN
insert ignore into dmOfx.ClosingOptions 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, StrikePrice, 
  DtExpire, GMTDtTrade, GMTDtSettle, ShPerCtrct, Units, UnitPrice, 
  MarkUpDn, Commission, Taxes, Fees, TransLoad, Total, CurSym, SubAcctSec, 
  SubAcctFund, OptTransType, ReversalFiTId, RelFiTId, RelType, Secured)
  
SELECT Accounts.DMAcctId, Opt.FiTId, Inv.SecId, SecInfo.EquityId,
  SecInfo.SecName, SecInfo.Ticker,  OptInfo.OptType, OptInfo.StrikePrice, 
  str_to_date(left(OptInfo.DtExpire, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtTrade, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtSettle, 8), "%Y%m%d"),
  Opt.ShPerCtrct, Inv.Units, Inv.UnitPrice, Inv.Markdown, 
  Inv.Commission, Inv.Taxes, Inv.Fees, Inv.TransLoad, 
  Inv.Total, Inv.CurSym, Inv.SubAcctSec, Inv.SubAcctFund, 
  Opt.OptSellType, InvTran.ReversalFiTId, null, null, null

FROM dbOfx.InvSell AS Inv, dbOfx.SellOpt AS Opt, dbOfx.OptInfo,
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, dbOfx.SecInfo AS SecInfo,
  dmOfx.Accounts AS Accounts

WHERE Inv.AcctId = Opt.AcctId 
	AND Inv.FiTId = Opt.FiTId 
	AND InvTran.AcctId = Inv.AcctId 
    AND InvTran.FiTId = Inv.FiTId 
	AND SecId.SecId = Inv.SecId 
    AND SecInfo.BrokerId = SecId.BrokerId 
	AND SecInfo.SecId = SecId.SecId 
    AND Opt.OptSellType = 'SELLTOCLOSE' 
    and SecInfo.BrokerId = OptInfo.BrokerId
    and SecInfo.SecId = OptInfo.SecId
	and Inv.AcctId = Accounts.AcctId
  
  order by SecInfo.EquityId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingOption_retrieveAllForAcctEquityId` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingOption_retrieveAllForAcctEquityId`(
	in _dmAcctId Integer(10), in _equityId char(255))
BEGIN
/* used in application to retrieve all closing option transactions 
	for a given account and equityId */

SELECT * FROM ClosingOptions

where DMAcctId = _dmAcctId
	and EquityId = _equityId

order by GMTDtTrade
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingOtherSellOther_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingOtherSellOther_insert`()
BEGIN
INSERT INTO dmOfx.ClosingOther 
	(DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, 
    GMTDtSettle, Units, UnitPrice, MarkUpDn, Commission, Taxes, 
    Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId)

SELECT Accounts.DMAcctId, SellOther.FiTId, InvSell.SecId, SecInfo.EquityId, 
	SecInfo.SecName, SecInfo.Ticker, 
    convertDateTime2GMT(InvTran.DtTrade) as GMTDtTrade, 
    convertDateTime2GMT(InvTran.DtSettle) as GMTDtSettle, InvSell.Units, 
    InvSell.UnitPrice, InvSell.MarkDown, InvSell.Commission, InvSell.Taxes, 
    InvSell.Fees, InvSell.TransLoad, InvSell.Total, InvSell.CurSym, 
    InvSell.SubAcctSec, InvSell.SubAcctFund, InvTran.ReversalFiTId 

FROM dbOfx.InvSell AS InvSell, dbOfx.SellOther AS SellOther, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, 
  dbOfx.SecInfo AS SecInfo, dmOfx.Accounts AS Accounts

WHERE InvSell.AcctId = SellOther.AcctId AND InvSell.FiTId = SellOther.FiTId 
  AND InvTran.AcctId = InvSell.AcctId AND InvTran.FiTId = InvSell.FiTId 
  AND SecId.SecId = InvSell.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND SecId.BrokerId = Accounts.BrokerId
  AND SellOther.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingStockBuyStock_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingStockBuyStock_insert`()
BEGIN
INSERT INTO dmOfx.ClosingStock 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, StockTransType, ReversalFiTId)

SELECT Accounts.DMAcctId, BuyStock.FiTId, InvBuy.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  convertDateTime2GMT(InvTran.DtTrade) as GMTDtTrade,
  convertDateTime2GMT(InvTran.DtSettle) as GMTDtSettle,
  InvBuy.Units, InvBuy.UnitPrice, InvBuy.Markup, InvBuy.Commission, 
  InvBuy.Taxes, InvBuy.Fees, InvBuy.TransLoad, InvBuy.Total, InvBuy.CurSym, 
  InvBuy.SubAcctSec, InvBuy.SubAcctFund, BuyStock.BuyType, InvTran.ReversalFiTId 
  
FROM dbOfx.InvBuy AS InvBuy, dbOfx.BuyStock AS BuyStock, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, dbOfx.SecInfo AS SecInfo,
  dmOfx.Accounts AS Accounts

WHERE InvBuy.AcctId = BuyStock.AcctId AND InvBuy.FiTId = BuyStock.FiTId 
  AND InvTran.AcctId = InvBuy.AcctId AND InvTran.FiTId = InvBuy.FiTId 
  AND SecId.SecId = InvBuy.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND BuyStock.BuyType = 'BUYTOCOVER'
  AND SecId.BrokerId = Accounts.BrokerId
  AND BuyStock.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingStockSellStock_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingStockSellStock_insert`()
BEGIN
INSERT INTO dmOfx.ClosingStock 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, StockTransType, ReversalFiTId)

SELECT Accounts.DMAcctId, SellStock.FiTId, InvSell.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  convertDateTime2GMT(InvTran.DtTrade) as GMTDtTrade,
  convertDateTime2GMT(InvTran.DtSettle) as GMTDtSettle,
  InvSell.Units, InvSell.UnitPrice, InvSell.MarkDown, 
  InvSell.Commission, InvSell.Taxes, InvSell.Fees, InvSell.TransLoad, 
  InvSell.Total, InvSell.CurSym, InvSell.SubAcctSec, InvSell.SubAcctFund, 
  SellStock.SellType, InvTran.ReversalFiTId 
  
FROM dbOfx.InvSell AS InvSell, dbOfx.SellStock AS SellStock, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, 
  dbOfx.SecInfo AS SecInfo, dmOfx.Accounts AS Accounts

WHERE InvSell.AcctId = SellStock.AcctId AND InvSell.FiTId = SellStock.FiTId 
  AND InvTran.AcctId = InvSell.AcctId AND InvTran.FiTId = InvSell.FiTId 
  AND SecId.SecId = InvSell.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND SellStock.SellType <> 'SELLSHORT'
  AND SecId.BrokerId = Accounts.BrokerId
  AND SellStock.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `ClosingStock_retrieveAllForAcctEquityId` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `ClosingStock_retrieveAllForAcctEquityId`(
	in _dmAcctId Integer(10), in _equityId char(255))
BEGIN
/* used in application to retrieve all closing stock transactions 
	for a given account and equityId */

SELECT * FROM ClosingStock

where DMAcctId = _dmAcctId
	and EquityId = _equityId

order by GMTDtTrade
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `create_equity` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `create_equity`(in 
	_tkr varchar(100), _company varchar(100), _sector varchar(100),
    _industry varchar(100), _country varchar(100), _mktCap double, _pe double,
    _fwdPE double, _peg double,
    _div double, _payoutRatio double, _eps double, _epsCY double, _epsNY double,
    _epsP5Y double, _epsN5Y double, _atr double, _sma20 double,
    _sma50 double, _sma200 double, _50dHi double, _50dLo double, _52wHi double, _52wLo double, _rsi double, 
    _anRec double, _price double, 
    _volume int, _earnDate varchar(25), _tgtPrice double, _date date)
BEGIN
    INSERT INTO FinVizInfo 
    (
    Tkr, Company, Sector, Industry, Country, `MktCap(B)`, PE, FwdPE, PEG, 
    `Div`, PayoutRatio, EPS, `EPS/CY`, `EPS/NY`, `EPS/P5Y`, `EPS/N5Y`, 
    ATR, SMA20, SMA50, SMA200, `50dHi`, `50dLo`, `52wHi`, `52wLo`, RSI, 
    AnRec, Price, Volume, EarnDate, TgtPrice, `Date`
    ) 
    
    VALUES 
    (
    _tkr, _company, _sector, _industry, _country, _mktCap, _pe, _fwdPE, _peg, 
    _div, _payoutRatio, _eps, _epsCY, _epsNY, _epsP5Y, _epsN5Y, 
    _atr, _sma20, _sma50, _sma200, _50dHi, _50dLo, _52wHi, _52wLo, _rsi, 
    _anRec, _price, _volume, _earnDate, _tgtPrice, _date
    ) 
    
    on duplicate key update 
	Company = _company, Sector = _sector, Industry = _industry, Country = _country,
    `MktCap(B)` = _mktCap, PE = _pe, FwdPE = _fwdPE, PEG = _peg, `Div` = _div,
    PayoutRatio = _payoutRatio, EPS = _eps, `EPS/CY` = _epsCY, `EPS/NY` = _epsNY, 
    `EPS/P5Y` = _epsP5Y, `EPS/N5Y` = _epsN5Y, ATR = _atr, SMA20 = _sma20, SMA50 = _sma50, 
    SMA200 = _sma200, `50dHi` = _50dHi, `50dLo` = _50dLo, `52wHi` = _52wHi, `52wLo` = _52wLo, 
    RSI = _rsi, AnRec = _anRec, Price = _price, Volume = _volume, EarnDate = _earnDate, TgtPrice = _tgtPrice;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `DowPctGainByDate_App` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `DowPctGainByDate_App`()
BEGIN
/* used in application to retrieve DIA PctGain by date*/
/* charting doesn't handle dates well; went to day of year for numerical */
set @start = (select min(`Date`) from EquityHistory
				where Tkr = "DIA" and 
                year(`Date`) = year(current_date));
                
set @startMktValue = (select AdjClose from EquityHistory
				where Tkr = "DIA" and `Date` = @start);

select `Date`, dayofyear(`Date`) as DayOfYear, AdjClose, 
@start, @startMktValue, 
round(100 * (AdjClose - @startMktValue) / @startMktValue, 1) as PctGain from EquityHistory

where Tkr = "DIA"
and `Date` >= @start
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Drawdown_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `Drawdown_insert`()
BEGIN
drop temporary table if exists temp1;
truncate table Drawdown;

insert ignore into Drawdown (YrMo, MaxMktVal)
select YrMo, max(SMktValue)
from (select StmtDt, left(StmtDt, 7) as YrMo, sum(MktValue) as SMktValue
				from AccountTotals
                group by StmtDt, YrMo
                order by StmtDt) as A
	group by YrMo;

create temporary table temp1
select A.StmtDt, A.YrMo
from (select StmtDt, left(StmtDt, 7) as YrMo, sum(MktValue) as SMktValue
				from AccountTotals
                group by StmtDt, YrMo
                order by StmtDt) as A, Drawdown as D
where D.YrMo = A.YrMo
	and D.MaxMktVal = A.SMktValue
    order by StmtDt;
    
update Drawdown inner join temp1 using(YrMo)
set 
Drawdown.StmtDt = temp1.StmtDt;

/* find min value in the month where date is 
greater than max value date; can be there is none */
drop temporary table if exists temp1;
create temporary table temp1
select A.YrMo, min(SMktValue) as MinMktVal
from (select AccountTotals.StmtDt, left(AccountTotals.StmtDt, 7) as YrMo, 
	sum(MktValue) as SMktValue
				from AccountTotals, Drawdown
                where Drawdown.YrMo = left(AccountTotals.StmtDt, 7)
					and Drawdown.StmtDt < AccountTotals.StmtDt
                group by AccountTotals.StmtDt, YrMo
                order by AccountTotals.StmtDt) as A
	group by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set 
Drawdown.MinMktVal = temp1.MinMktVal,
Drawdown.Drawdown = 
round(100 * (temp1.MinMktVal - Drawdown.MaxMktVal) / Drawdown.MaxMktVal, 1);

drop temporary table if exists temp1;

create temporary table temp1
select left(`Date`, 7) as YrMo, max(AdjClose) as MaxAdjClose
				from EquityHistory
                where Tkr = "SPX" and `Date` > "2017-12-31"
                group by YrMo
                order by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set
Drawdown.SPXMax = temp1.MaxAdjClose;

drop temporary table if exists temp1;

create temporary table temp1
select A.`Date`, A.YrMo
from (select `Date`, left(`Date`, 7) as YrMo, AdjClose
				from EquityHistory
                where Tkr = "SPX" and `Date` > "2017-12-31"
                order by `Date`) as A, Drawdown as D
where D.YrMo = A.YrMo
	and D.SPXMax = A.AdjClose;
    
update Drawdown inner join temp1 using(YrMo)
set 
Drawdown.StmtDt = temp1.`Date`;

/* find min value in the month where date is 
greater than max value date; can be there is none */
drop temporary table if exists temp1;
create temporary table temp1
select A.YrMo, min(AdjClose) as MinAdjClose
from (select EquityHistory.`Date`, 
		left(EquityHistory.`Date`, 7) as YrMo, AdjClose
				from EquityHistory, Drawdown
                where Tkr = "SPX" and `Date` > "2017-12-31"
                and Drawdown.YrMo = left(EquityHistory.`Date`, 7)
					and Drawdown.StmtDt < EquityHistory.`Date`
                order by EquityHistory.`Date`) as A
	group by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set 
Drawdown.SPXMin = temp1.MinAdjClose,
Drawdown.SPXDrawdown = 
round(100 * (temp1.MinAdjClose - Drawdown.SPXMax) / Drawdown.SPXMax, 1);

drop temporary table if exists temp1;

create temporary table temp1
select left(`Date`, 7) as YrMo, max(AdjClose) as MaxAdjClose
				from EquityHistory
                where Tkr = "QQQ" and `Date` > "2017-12-31"
                group by YrMo
                order by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set
Drawdown.QQQMax = temp1.MaxAdjClose;

drop temporary table if exists temp1;

create temporary table temp1
select A.`Date`, A.YrMo
from (select `Date`, left(`Date`, 7) as YrMo, AdjClose
				from EquityHistory
                where Tkr = "QQQ" and `Date` > "2017-12-31"
                order by `Date`) as A, Drawdown as D
where D.YrMo = A.YrMo
	and D.QQQMax = A.AdjClose;
    
update Drawdown inner join temp1 using(YrMo)
set 
Drawdown.StmtDt = temp1.`Date`;

/* find min value in the month where date is 
greater than max value date; can be there is none */
drop temporary table if exists temp1;
create temporary table temp1
select A.YrMo, min(AdjClose) as MinAdjClose
from (select EquityHistory.`Date`, 
		left(EquityHistory.`Date`, 7) as YrMo, AdjClose
				from EquityHistory, Drawdown
                where Tkr = "QQQ" and `Date` > "2017-12-31"
                and Drawdown.YrMo = left(EquityHistory.`Date`, 7)
					and Drawdown.StmtDt < EquityHistory.`Date`
                order by EquityHistory.`Date`) as A
	group by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set 
Drawdown.QQQMin = temp1.MinAdjClose,
Drawdown.QQQDrawdown = 
round(100 * (temp1.MinAdjClose - Drawdown.QQQMax) / Drawdown.QQQMax, 1);

drop temporary table if exists temp1;

create temporary table temp1
select left(`Date`, 7) as YrMo, max(AdjClose) as MaxAdjClose
				from EquityHistory
                where Tkr = "IWM" and `Date` > "2017-12-31"
                group by YrMo
                order by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set
Drawdown.RussellMax = temp1.MaxAdjClose;

drop temporary table if exists temp1;

create temporary table temp1
select A.`Date`, A.YrMo
from (select `Date`, left(`Date`, 7) as YrMo, AdjClose
				from EquityHistory
                where Tkr = "IWM" and `Date` > "2017-12-31"
                order by `Date`) as A, Drawdown as D
where D.YrMo = A.YrMo
	and D.RussellMax = A.AdjClose;
    
update Drawdown inner join temp1 using(YrMo)
set 
Drawdown.StmtDt = temp1.`Date`;

/* find min value in the month where date is 
greater than max value date; can be there is none */
drop temporary table if exists temp1;
create temporary table temp1
select A.YrMo, min(AdjClose) as MinAdjClose
from (select EquityHistory.`Date`, 
		left(EquityHistory.`Date`, 7) as YrMo, AdjClose
				from EquityHistory, Drawdown
                where Tkr = "IWM" and `Date` > "2017-12-31"
                and Drawdown.YrMo = left(EquityHistory.`Date`, 7)
					and Drawdown.StmtDt < EquityHistory.`Date`
                order by EquityHistory.`Date`) as A
	group by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set 
Drawdown.RussellMin = temp1.MinAdjClose,
Drawdown.RussellDrawdown = 
round(100 * (temp1.MinAdjClose - Drawdown.RussellMax) / Drawdown.RussellMax, 1);

drop temporary table if exists temp1;

create temporary table temp1
select left(`Date`, 7) as YrMo, max(AdjClose) as MaxAdjClose
				from EquityHistory
                where Tkr = "DIA" and `Date` > "2017-12-31"
                group by YrMo
                order by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set
Drawdown.DowMax = temp1.MaxAdjClose;

drop temporary table if exists temp1;

create temporary table temp1
select A.`Date`, A.YrMo
from (select `Date`, left(`Date`, 7) as YrMo, AdjClose
				from EquityHistory
                where Tkr = "DIA" and `Date` > "2017-12-31"
                order by `Date`) as A, Drawdown as D
where D.YrMo = A.YrMo
	and D.DowMax = A.AdjClose;
    
update Drawdown inner join temp1 using(YrMo)
set 
Drawdown.StmtDt = temp1.`Date`;

/* find min value in the month where date is 
greater than max value date; can be there is none */
drop temporary table if exists temp1;
create temporary table temp1
select A.YrMo, min(AdjClose) as MinAdjClose
from (select EquityHistory.`Date`, 
		left(EquityHistory.`Date`, 7) as YrMo, AdjClose
				from EquityHistory, Drawdown
                where Tkr = "DIA" and `Date` > "2017-12-31"
                and Drawdown.YrMo = left(EquityHistory.`Date`, 7)
					and Drawdown.StmtDt < EquityHistory.`Date`
                order by EquityHistory.`Date`) as A
	group by YrMo;

update Drawdown inner join temp1 on Drawdown.YrMo = temp1.YrMo
set 
Drawdown.DowMin = temp1.MinAdjClose,
Drawdown.DowDrawdown = 
round(100 * (temp1.MinAdjClose - Drawdown.DowMax) / Drawdown.DowMax, 1);

drop temporary table if exists temp1;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `EquityHistory_IEXupsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `EquityHistory_IEXupsert`(
	in `_tkr` char(120), in `_date` date, in `_ticker` char(120), in `_open` decimal(19, 4), 
	in `_high` decimal(19, 4), in `_low` decimal(19, 4), in `_close` decimal(19, 4), 
	in `_adjClose` decimal(19, 4), in `_divAmt` decimal(19, 4), 
    in `_splitCoeff` decimal(19, 4), in `_volume` int(10)
)
begin
insert into `EquityHistory` (
	`Tkr_AlphaVantage`, `Date`, `Tkr`, `Open`,
    `High`, `Low`, `Close`,
    `AdjClose`, `DivAmt`, `SplitCoeff`, `Volume`
)

values (
	`_tkr`, `_date`, `_ticker`, `_open`, 
    `_high`, `_low`, `_close`,
    `_adjClose`, `_divAmt`, `_splitCoeff`, `_volume`
) 

on duplicate key update 
	`Open` = _open,
    `High` = _high, `Low` = _low, `Close` = _close,
    `AdjClose` = _adjClose, `DivAmt` = _divAmt, `SplitCoeff` = _splitCoeff, `Volume` = _volume
;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `EquityHistory_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `EquityHistory_update`()
BEGIN
/* adds Tkr to EquityHistory table from ClientEquityAttributes table */
update ignore EquityHistory

inner join ClientEquityAttributes 
on EquityHistory.Tkr_AlphaVantage = ClientEquityAttributes.Tkr_AlphaVantage

set EquityHistory.Tkr = ClientEquityAttributes.Ticker;

END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `EquityHistory_upsert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `EquityHistory_upsert`(
	in `_tkr` char(120), in `_date` date, in `_ticker` char(120), in `_open` decimal(19, 4), 
	in `_high` decimal(19, 4), in `_low` decimal(19, 4), in `_close` decimal(19, 4), 
	in `_adjClose` decimal(19, 4), in `_divAmt` decimal(19, 4), 
    in `_splitCoeff` decimal(19, 4), in `_volume` int(10)
)
begin
insert into `EquityHistory` (
	`Tkr_AlphaVantage`, `Date`, `Tkr`, `Open`,
    `High`, `Low`, `Close`,
    `AdjClose`, `DivAmt`, `SplitCoeff`, `Volume`
)

values (
	`_tkr`, `_date`, `_ticker`, `_open`, 
    `_high`, `_low`, `_close`,
    `_adjClose`, `_divAmt`, `_splitCoeff`, `_volume`
) 

on duplicate key update 
	`Open` = _open,
    `High` = _high, `Low` = _low, `Close` = _close,
    `AdjClose` = _adjClose, `DivAmt` = _divAmt, `SplitCoeff` = _splitCoeff, `Volume` = _volume
;
end ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `equity_info_tickers_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `equity_info_tickers_insert`()
BEGIN

insert ignore into `dmOfx`.`ClientEquityAttributes`
	(Tkr, Tkr_AlphaVantage, DLHistory, ClientSector)

select distinct SecInfo.UTkr, SecInfo.UTkr, "Yes", FinVizInfo.Sector

from dbOfx.SecInfo as SecInfo, dmOfx.FinVizInfo as FinVizInfo

where SecInfo.UTkr = FinVizInfo.Tkr
	/*and FinVizInfo.`Date` = (select max(FinVizInfo.`Date`))*/;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOClosed_insertOptions` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOClosed_insertOptions`()
BEGIN
/**
**	add closed stock lots
**/
INSERT INTO FIFOClosed
  (DMAcctId, FiTId, ClosedGrp, EquityId, Ticker, ClientSectorId, GMTDtTradeOpen, 
  GMTDtTradeClose, Units, UnitPriceOpen, UnitPriceClose, Days, PosType,
  TotalOpen, TotalClose, ClientAcctName, ActPct, EquityType, GainPct) 

select ClosedOptionFIFO.DMAcctId, FiTIdOpening, ClosedGrp, 
	EquityId, ClosedOptionFIFO.Ticker, ClientSectorId,
    null, GMTDtClosed, 
	Units, UnitPriceOpen, UnitPriceClose, 
    null,
    if(TotalOpen < 0, "LONG", "SHORT"),
    TotalOpen, TotalClose, 
    ClientAccts.ClientAcctName,
    null, 
    "OPTION",
    if (TotalOpen = 0, null, 
    round(100 * (TotalClose + TotalOpen) / abs(TotalOpen),4))
    
from ClosedOptionFIFO, ClientAccts, ClientEquityAttributes

where ClosedOptionFIFO.DMAcctId = ClientAccts.DMAcctId
    and ClosedOptionFIFO.Ticker = ClientEquityAttributes.Ticker
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOClosed_insertStock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOClosed_insertStock`()
BEGIN
/**
**	add closed stock lots
**/
INSERT INTO FIFOClosed
  (DMAcctId, FiTId, ClosedGrp, EquityId, Ticker, ClientSectorId, GMTDtTradeOpen, 
  GMTDtTradeClose, Units, UnitPriceOpen, UnitPriceClose, Days, PosType,
  TotalOpen, TotalClose, ClientAcctName, ActPct, EquityType, GainPct) 

select DMAcctIdOpening, FiTIdOpening, ClosedGrp, 
	EquityId, ClosedStockFIFO.Ticker, ClientSectorId,
    null as 'Open', GMTDtTrade as 'Close', 
	Units, UnitPriceOpen, UnitPriceClose, 
    null as 'Days',
    if(StockTransType = "BUY", "LONG", 
		if (StockTransType = "SELLSHORT", "SHORT", "UNKNOWN")) as 'PosType',
    TotalOpen, TotalClose, 
    ClientAccts.ClientAcctName,
    null as 'ActPct', 
    "STOCK" as EquityType, if (TotalOpen = 0, null,
    round(100 * (TotalClose + TotalOpen) / abs(TotalOpen),4)) as 'GainPct'
    
from ClosedStockFIFO, ClientAccts, ClientEquityAttributes

where /*GMTDtTrade > "2018-05-01"*/
	/*and */DMAcctIdOpening = ClientAccts.DMAcctId
    and ClosedStockFIFO.Ticker = ClientEquityAttributes.Ticker
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOClosed_ProfitFactor` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOClosed_ProfitFactor`()
BEGIN
/*defined as gross win / abs(gross loss)*/
select C.`Week`, Win / -Loss as ProfitFactor
from

(select B.`Week`, sum(B.Gain) as Gain, sum(Win) as Win, sum(Loss) as Loss

from
(select A.`Week`, A.Gain, if(A.Gain > 0, A.Gain, 0) as Win, if(A.Gain < 0, A.Gain, 0) as Loss
from (SELECT GMTDtTradeClose, week(GMTDtTradeClose) as Week, TotalOpen, TotalClose, 
	TotalOpen + TotalClose as Gain

FROM dmOfx.FIFOClosed

where GMTDtTradeClose > "2017-12-31"
order by GMTDtTradeClose) as A) as B
group by `Week`) as C
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOPositionsLMktVal_updateCash` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOPositionsLMktVal_updateCash`()
BEGIN
/* update table with leveraged cash values */
declare factor decimal(19,4);

set factor = (select (sum(LMktVal) / sum(MktVal))
	from FIFOPositions
	where EquityType = "OPTION" and PosType = "LONG");

update FIFOPositions

set LMktVal = round(MktVal * factor, 4)
	where EquityType = "CASH";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOPositionsLMktVal_updateOptions` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOPositionsLMktVal_updateOptions`()
BEGIN
update FIFOPositions

join ClientEquityAttributes on FIFOPositions.Ticker = ClientEquityAttributes.Ticker
	
set LMktVal = Units * ShPerCtrct * ClientEquityAttributes.StkPrice,
	MktVal = Units * ShPerCtrct * UnitPrice
    
where EquityType = "OPTION" /*and PosType = "LONG"*/
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOPositionsLMktVal_updateStock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOPositionsLMktVal_updateStock`()
BEGIN
/* look at the total of options leveraged value to put a leveraged
	value on stocks. Currently 50% of that leverage. */
declare factor decimal(19,4);
set factor = (select (sum(LMktVal) / sum(MktVal))
	from FIFOPositions
	where EquityType = "OPTION" and PosType = "LONG");

update FIFOPositions

join ClientEquityAttributes on FIFOPositions.Ticker = ClientEquityAttributes.Ticker

set MktVal = ClientEquityAttributes.StkPrice * FIFOPositions.Units,
	LMktVal = round(MktVal * factor * 0.5, 4)
	where EquityType = "STOCK" and PosType = "LONG"

;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOPositions_insertCash` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOPositions_insertCash`()
BEGIN
/* get cash positions by account into the table */
insert ignore into FIFOPositions
	(DMAcctId, FiTId, EquityId, Ticker, GMTDtTrade, ClientSectorId, EquityType, 
    PosType, OptType, ShPerCtrct, Units, UnitPrice, MktVal)
    
select Balances.DMAcctId, "CASH", "CASH", "CASH", now(), 1, "CASH",
    "LONG", "", 1, Balances.`Value`, 1, Balances.`Value`
    
from Balances, ClientAccts

where Balances.DMAcctId = ClientAccts.DMAcctId
		and ClientAccts.Active = "Yes"
		and Balances.`Name` = "Available Cash";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOPositions_insertPosOpt` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOPositions_insertPosOpt`()
BEGIN
INSERT INTO FIFOPositions
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, StrikePrice, DtExpire, 
  GMTDtTrade, GMTDtSettle, ShPerCtrct, Units, UnitPrice, CurrPrice, MarkUpDn, 
  Commission, Taxes, Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, 
  OptTransType, ReversalFiTId, OpeningOpen, OpeningHigh, OpeningLow, OpeningAdjClose, 
  ClientSectorId, MktVal, LMktVal, ActPct, 
  EquityType,
  PosType,
  GainPct,
  Days) 
  
SELECT DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, StrikePrice, DtExpire, 
  GMTDtTrade, GMTDtSettle, ShPerCtrct, Units, UnitPrice, CurrPrice, MarkUpDn, 
  Commission, Taxes, Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, 
  OptTransType, ReversalFiTId, OpeningOpen, OpeningHigh, OpeningLow, OpeningAdjClose, 
  ClientSectorId, MktVal, LMktVal, ActPct, 
  "OPTION", 
  if(strcmp(OptTransType,"BUYTOOPEN") = 0, "LONG", "SHORT"),
  GainPct,
  datediff(DtExpire, CurDate())
    
FROM OpenOptionFIFO

/* these are open positions so eliminate any spurious ones */
/* currPrice comes from the financial institution positions */
where DtExpire >= CurDate()
	and not isnull(CurrPrice)
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOPositions_insertPosStock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOPositions_insertPosStock`()
BEGIN
INSERT INTO FIFOPositions
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker,  
  GMTDtTrade, GMTDtSettle, Units, UnitPrice, CurrPrice, MarkUpDn, 
  Commission, Taxes, Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, 
  StockTransType, ReversalFiTId, 
  EquityType,
  PosType,
  GainPct) 
  
SELECT DMAcctId, FiTId, SecId, EquityId, SecName, Ticker,  
  GMTDtTrade, GMTDtSettle, Units, UnitPrice, CurrPrice, MarkUpDn, 
  Commission, Taxes, Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, 
  StockTransType, ReversalFiTId,  
  "STOCK", 
  if(strcmp(StockTransType,"BUY") = 0, "LONG", "SHORT"),
  GainPct
    
FROM OpenStockFIFO

where EquityId <> "Unknown"
	and SecName not like "%Unknown%"
    and not isnull(CurrPrice)
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOPositions_updateActPct` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOPositions_updateActPct`()
BEGIN
/* add the actual portfolio percent to the table */

declare total double;
set total = (select sum(LMktVal) from FIFOPositions);

update FIFOPositions

set ActPct = round((100 * LMktVal) / total, 4);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `FIFOPositions_updateSector` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `FIFOPositions_updateSector`()
BEGIN
update FIFOPositions

join ClientEquityAttributes on FIFOPositions.Ticker = ClientEquityAttributes.Ticker

set FIFOPositions.ClientSectorId = ClientEquityAttributes.ClientSectorId
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningDebt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningDebt_insert`()
BEGIN
INSERT INTO OpeningDebt
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad, 
  Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId, AccrdInt) 

SELECT Accounts.DMAcctId, BuyDebt.FiTId, InvBuy.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  InvBuy.Units, InvBuy.UnitPrice, InvBuy.Markup, 
  InvBuy.Commission, InvBuy.Taxes, InvBuy.Fees, InvBuy.TransLoad, 
  InvBuy.Total, InvBuy.CurSym, InvBuy.SubAcctSec, InvBuy.SubAcctFund, 
  InvTran.ReversalFiTId, BuyDebt.AccrdInt 
  
  FROM dbOfx.InvBuy AS InvBuy, dbOfx.BuyDebt AS BuyDebt, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, dbOfx.SecInfo AS SecInfo,
  dmOfx.Accounts AS Accounts
  
  WHERE InvBuy.AcctId = BuyDebt.AcctId AND InvBuy.FiTId = BuyDebt.FiTId 
  AND InvTran.AcctId = InvBuy.AcctId AND InvTran.FiTId = InvBuy.FiTId 
  AND SecId.SecId = InvBuy.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND SecId.BrokerId = Accounts.BrokerId
  AND BuyDebt.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningMF_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningMF_insert`()
BEGIN
INSERT INTO OpeningMF (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, 
  GMTDtSettle, Units, UnitPrice, MarkUpDn, Commission, Taxes, 
  Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, 
  ReversalFiTId, BuyType, RelFiTID)

SELECT Accounts.DMAcctId, BuyMF.FiTId, InvBuy.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  CONVERTDATETIME2GMT(InvTran.DtTrade),
  CONVERTDATETIME2GMT(InvTran.DtSettle),
  InvBuy.Units, InvBuy.UnitPrice, InvBuy.Markup, 
  InvBuy.Commission, InvBuy.Taxes, InvBuy.Fees, InvBuy.TransLoad, 
  InvBuy.Total, InvBuy.CurSym, InvBuy.SubAcctSec, InvBuy.SubAcctFund, 
  InvTran.ReversalFiTId, BuyMF.BuyType, BuyMF.RelFiTId

FROM dbOfx.InvBuy AS InvBuy, dbOfx.BuyMF AS BuyMF, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, 
  dbOfx.SecInfo AS SecInfo, dmOfx.Accounts AS Accounts

WHERE InvBuy.AcctId = BuyMF.AcctId AND InvBuy.FiTId = BuyMF.FiTId 
  AND InvTran.AcctId = InvBuy.AcctId AND InvTran.FiTId = InvBuy.FiTId 
  AND SecId.SecId = InvBuy.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND SecId.BrokerId = Accounts.BrokerId
  AND BuyMF.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningOptionsBuyOpt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningOptionsBuyOpt_insert`()
BEGIN
insert ignore into dmOfx.OpeningOptions 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, 
  StrikePrice, DtExpire, GMTDtTrade, GMTDtSettle, 
  ShPerCtrct, Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, OptTransType, ReversalFiTId)
  
SELECT Accounts.DMAcctId, Opt.FiTId, Inv.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  OptInfo.OptType, OptInfo.StrikePrice, 
  str_to_date(left(DtExpire, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtTrade, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtSettle, 8), "%Y%m%d"),
  Opt.ShPerCtrct, Inv.Units, Inv.UnitPrice, Inv.Markup, 
  Inv.Commission, Inv.Taxes, Inv.Fees, Inv.TransLoad, 
  Inv.Total, Inv.CurSym, Inv.SubAcctSec, Inv.SubAcctFund, 
  Opt.OptBuyType, InvTran.ReversalFiTId
  
  FROM dbOfx.InvBuy AS Inv, dbOfx.BuyOpt AS Opt, dbOfx.OptInfo,
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, dbOfx.SecInfo AS SecInfo,
  dmOfx.Accounts AS Accounts

  WHERE Inv.AcctId = Opt.AcctId 
  AND Inv.FiTId = Opt.FiTId 
  AND InvTran.AcctId = Inv.AcctId 
  AND InvTran.FiTId = Inv.FiTId 
  AND SecId.SecId = Inv.SecId 
  AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId 
  AND Opt.OptBuyType = 'BUYTOOPEN' 
      and SecInfo.BrokerId = OptInfo.BrokerId
    and SecInfo.SecId = OptInfo.SecId
  AND SecId.BrokerId = Accounts.BrokerId
  AND Opt.AcctId = Accounts.AcctId
  ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningOptionsPrices_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningOptionsPrices_update`()
BEGIN
update OpeningOptions OO

join ClientEquityAttributes CEA on OO.Ticker = CEA.Ticker
join EquityHistory DLHistory on CEA.Tkr_AlphaVantage = DLHistory.Tkr_AlphaVantage

set	OO.OpeningOpen = DLHistory.`Open`,
	OO.OpeningHigh = DLHistory.High,
	OO.OpeningLow = DLHistory.Low,
	OO.OpeningAdjClose = DLHistory.AdjClose

where DLHistory.`Date` = cast(OO.GMTDtTrade as date)
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningOptionsSellOpt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningOptionsSellOpt_insert`()
BEGIN
insert ignore into OpeningOptions 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, 
  StrikePrice, DtExpire, GMTDtTrade, GMTDtSettle, ShPerCtrct, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, OptTransType, ReversalFiTId)
  
SELECT Accounts.DMAcctId, Opt.FiTId, Inv.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker,
  OptInfo.OptType, OptInfo.StrikePrice, 
  str_to_date(left(DtExpire, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtTrade, 8), "%Y%m%d"),
  str_to_date(left(InvTran.DtSettle, 8), "%Y%m%d"),
  Opt.ShPerCtrct, Inv.Units, Inv.UnitPrice, Inv.Markdown, 
  Inv.Commission, Inv.Taxes, Inv.Fees, Inv.TransLoad, 
  Inv.Total, Inv.CurSym, Inv.SubAcctSec, Inv.SubAcctFund, 
  Opt.OptSellType, InvTran.ReversalFiTId
  
  FROM dbOfx.InvSell AS Inv, dbOfx.SellOpt AS Opt, dbOfx.OptInfo,
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, dbOfx.SecInfo AS SecInfo,
  dmOfx.Accounts AS Accounts

  WHERE Inv.AcctId = Opt.AcctId 
  AND Inv.FiTId = Opt.FiTId 
  AND InvTran.AcctId = Inv.AcctId 
  AND InvTran.FiTId = Inv.FiTId 
  AND SecId.SecId = Inv.SecId 
  AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId 
  AND Opt.OptSellType = 'SELLTOOPEN' 
  and SecInfo.BrokerId = OptInfo.BrokerId
  and SecInfo.SecId = OptInfo.SecId
  AND SecId.BrokerId = Accounts.BrokerId
  AND Opt.AcctId = Accounts.AcctId
  
  order by SecInfo.EquityId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningOption_retrieveAllForAcctEquityId` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningOption_retrieveAllForAcctEquityId`(
	in _dmAcctId Integer(10), in _equityId char(255))
BEGIN
/* used in application to retrieve all opening option
	transactions in a given account for a given equityId */

SELECT * FROM OpeningOptions

where DMAcctId = _dmAcctId
	and EquityId = _equityId

order by GMTDtTrade
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningOption_retrieveDistinctEquityId` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningOption_retrieveDistinctEquityId`(
in _dmAcctId integer(10))
BEGIN
/* used in application to retrieve distinct equityId 
	from openingOption transactions for a given account */

select distinct EquityId 

from OpeningOptions

where DMAcctId = _dmAcctId

order by EquityId
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningOtherBuyOther_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningOtherBuyOther_insert`()
BEGIN
INSERT INTO dmOfx.OpeningOther 
	(DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, 
    GMTDtTrade, GMTDtSettle,Units, UnitPrice, MarkUpDn, Commission, Taxes, 
    Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId)

SELECT Accounts.DMAcctId, BuyOther.FiTId, InvBuy.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  InvBuy.Units, InvBuy.UnitPrice, InvBuy.Markup, 
  InvBuy.Commission, InvBuy.Taxes, InvBuy.Fees, InvBuy.TransLoad, 
  InvBuy.Total, InvBuy.CurSym, InvBuy.SubAcctSec, InvBuy.SubAcctFund, 
  InvTran.ReversalFiTId 

FROM dbOfx.InvBuy AS InvBuy, dbOfx.BuyOther AS BuyOther, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, 
  dbOfx.SecInfo AS SecInfo, dmOfx.Accounts AS Accounts

WHERE InvBuy.AcctId = BuyOther.AcctId AND InvBuy.FiTId = BuyOther.FiTId 
  AND InvTran.AcctId = InvBuy.AcctId AND InvTran.FiTId = InvBuy.FiTId 
  AND SecId.SecId = InvBuy.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND SecId.BrokerId = Accounts.BrokerId
  AND BuyOther.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningOtherSellOther_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningOtherSellOther_insert`()
BEGIN
INSERT INTO dmOfx.OpeningOther 
	(DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, 
    GMTDtTrade, GMTDtSettle, Units, UnitPrice, MarkUpDn, Commission, Taxes, 
    Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId)

SELECT Accounts.DMAcctId, BuyOther.FiTId, InvBuy.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  InvBuy.Units, InvBuy.UnitPrice, InvBuy.Markup, 
  InvBuy.Commission, InvBuy.Taxes, InvBuy.Fees, InvBuy.TransLoad, 
  InvBuy.Total, InvBuy.CurSym, InvBuy.SubAcctSec, InvBuy.SubAcctFund, 
  InvTran.ReversalFiTId 

FROM dbOfx.InvBuy AS InvBuy, dbOfx.BuyOther AS BuyOther, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, 
  dbOfx.SecInfo AS SecInfo, dmOfx.Accounts AS Accounts

WHERE InvBuy.AcctId = BuyOther.AcctId AND InvBuy.FiTId = BuyOther.FiTId 
  AND InvTran.AcctId = InvBuy.AcctId AND InvTran.FiTId = InvBuy.FiTId 
  AND SecId.SecId = InvBuy.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND SecId.BrokerId = Accounts.BrokerId
  AND BuyOther.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningStockBuyStock_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningStockBuyStock_insert`()
BEGIN
INSERT INTO dmOfx.OpeningStock 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, StockTransType, ReversalFiTId)

SELECT Accounts.DMAcctId, BuyStock.FiTId, InvBuy.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  InvBuy.Units, InvBuy.UnitPrice, InvBuy.Markup, 
  InvBuy.Commission, InvBuy.Taxes, InvBuy.Fees, InvBuy.TransLoad, 
  InvBuy.Total, InvBuy.CurSym, InvBuy.SubAcctSec, InvBuy.SubAcctFund, 
  BuyStock.BuyType, InvTran.ReversalFiTId 
  
FROM dbOfx.InvBuy AS InvBuy, dbOfx.BuyStock AS BuyStock, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, dbOfx.SecInfo AS SecInfo,
  dmOfx.Accounts AS Accounts

WHERE InvBuy.AcctId = BuyStock.AcctId AND InvBuy.FiTId = BuyStock.FiTId 
  AND InvTran.AcctId = InvBuy.AcctId AND InvTran.FiTId = InvBuy.FiTId 
  AND SecId.SecId = InvBuy.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND BuyStock.BuyType <> 'BUYTOCOVER'
  AND SecId.BrokerId = Accounts.BrokerId
  AND BuyStock.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningStockSellStock_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningStockSellStock_insert`()
BEGIN
INSERT INTO dmOfx.OpeningStock 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, StockTransType, ReversalFiTId)

SELECT Accounts.DMAcctId, SellStock.FiTId, InvSell.SecId, SecInfo.EquityId, 
  SecInfo.SecName, SecInfo.Ticker, 
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  InvSell.Units, InvSell.UnitPrice, InvSell.MarkDown, 
  InvSell.Commission, InvSell.Taxes, InvSell.Fees, InvSell.TransLoad, 
  InvSell.Total, InvSell.CurSym, InvSell.SubAcctSec, InvSell.SubAcctFund, 
  SellStock.SellType, InvTran.ReversalFiTId 
  
FROM dbOfx.InvSell AS InvSell, dbOfx.SellStock AS SellStock, 
  dbOfx.InvTran AS InvTran, dbOfx.SecId AS SecId, 
  dbOfx.SecInfo AS SecInfo, dmOfx.Accounts AS Accounts

WHERE InvSell.AcctId = SellStock.AcctId AND InvSell.FiTId = SellStock.FiTId 
  AND InvTran.AcctId = InvSell.AcctId AND InvTran.FiTId = InvSell.FiTId 
  AND SecId.SecId = InvSell.SecId AND SecInfo.BrokerId = SecId.BrokerId 
  AND SecInfo.SecId = SecId.SecId AND SellStock.SellType = 'SELLSHORT'
  AND SecId.BrokerId = Accounts.BrokerId
  AND SellStock.AcctId = Accounts.AcctId;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningStock_retrieveAllForAcctEquityId` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningStock_retrieveAllForAcctEquityId`(
	in _dmAcctId Integer(10), in _equityId char(255))
BEGIN
/* used in application to retrieve all opening stock transactions 
	in a given account for a given equityId */

SELECT * FROM OpeningStock

where DMAcctId = _dmAcctId
	and EquityId = _equityId

order by GMTDtTrade
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpeningStock_retrieveDistinctEquityId` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpeningStock_retrieveDistinctEquityId`(
in _dmAcctId integer(10))
BEGIN
/* used in application to retrieve distinct equityId 
	from openingStock transactions for a given account */

select distinct EquityId 

from OpeningStock

where DMAcctId = _dmAcctId

order by EquityId
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpenOptionFIFO_updateCurrPrice` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpenOptionFIFO_updateCurrPrice`()
BEGIN
/** current option prices from positions table **/
update OpenOptionFIFO OO

join PosOpt PO on OO.EquityId = PO.Equityid 

set OO.CurrPrice = PO.UnitPrice,
	OO.GainPct = if (OO.UnitPrice < 0, 
    round(100 * (OO.UnitPrice - PO.UnitPrice)/OO.UnitPrice, 4), 
    round(-100 * (OO.UnitPrice - PO.UnitPrice)/OO.UnitPrice, 4))

where not isnull(PO.UnitPrice)
	and OO.UnitPrice <> 0
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `OpenStockFIFO_updateCurrPrice` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `OpenStockFIFO_updateCurrPrice`()
BEGIN
/** current stock prices from positions table **/
update OpenStockFIFO OS

join PosStock PS on OS.EquityId = PS.Equityid 

set OS.CurrPrice = PS.UnitPrice,
	OS.GainPct = if (OS.UnitPrice < 0, 
    round(100 * (OS.UnitPrice - PS.UnitPrice)/OS.UnitPrice, 4), 
    round(-100 * (OS.UnitPrice - PS.UnitPrice)/OS.UnitPrice, 4))
    
    where not isnull(PS.UnitPrice)
	and OS.UnitPrice <> 0
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PortfolioPctGainByDate_App` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PortfolioPctGainByDate_App`()
BEGIN
/* used in application to retrieve Portfolio PctGain by date*/
/* assumes no deposits or withdrawals */
/* charting doesn't handle dates well; went to day of year for numerical */
set @start = (select min(StmtDt) from AccountTotals
				where year(StmtDt) = year(current_date));
                
set @startMktValue = (select A.MktValue from 
						(select sum(MktValue) as MktValue
							from AccountTotals
                            where StmtDt = @start
							group by StmtDt) as A);

select StmtDt, dayofyear(StmtDt) as DayOfYear, sum(Cost) as Cost, 
	sum(MktValue) as MktValue, 
	/*round(100 * (sum(Cost) + sum(MktValue)) / (-sum(Cost)), 1) as PctGain*/
	round(100 * (sum(MktValue) - @startMktValue) / @startMktValue, 1) as PctGain
from AccountTotals
group by StmtDt
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Portfolio_Open_AcctTotals` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `Portfolio_Open_AcctTotals`()
BEGIN
/* update the actual portfolio percent for each sector */
declare _date varchar(12);
set _date = (select max(DtAsOf) from Balances);

insert into AccountTotals (DMAcctId, StmtDt, Cost, MktValue, PctGain)

SELECT DMAcctId, _date, 
	sum(Cost) as Cost,
    sum(MktVal) as MktVal,
    if(sum(Cost) = 0, 0, 
	round(100 * (sum(MktVal) + sum(Cost)) / -(sum(Cost)), 1)) as PctGain

from(
/* open stock positions */
SELECT DMAcctId, Ticker, 
	sum(Units * CurrPrice) as MktVal, sum(Total) as Cost
FROM OpenStockFIFO
where UnitPrice <> 0
	and not isnull(CurrPrice) group by DMAcctId, Ticker

union all

/* open option positions */
SELECT DMAcctId, Ticker, 
sum(Units * CurrPrice * ShPerCtrct) as MktVal, sum(Total) as Cost
FROM OpenOptionFIFO
where UnitPrice <> 0
and not isnull(CurrPrice) group by DMAcctId, Ticker

union all

/* available cash */
SELECT DMAcctId, Descr as EquityId, 
/*sum(-(`Value`)) as Cost,*/
sum(`Value`) as MktVal,
sum(0) as Cost
FROM dmOfx.Balances
where Descr = "Available Cash"
group by DMAcctId) as Z 
/* on non-trading days, no Current Price. */
where Cost <> 0 or MktVal <> 0
group by DMAcctId

on duplicate key update
Cost = Values(Cost), MktValue = Values(MktValue), 
PctGain = Values(PctGain)


;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosOpt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosOpt_insert`()
BEGIN
insert ignore into dmOfx.PosOpt
  (DMAcctId, InvPosId, DtAsOf, SecId, EquityId, SecName, Ticker, PosType, 
  OptType, ShPerCtrct, HeldInAccount, Units, UnitPrice, MktVal, DtPriceAsOf, 
  CurSym, Memo, Inv401kSource, Secured) 
  
SELECT Accounts.DMAcctId, InvPos.InvPosId, InvPos.DtAsOf, InvPos.SecId, 
	SecInfo.EquityId, SecInfo.SecName, SecInfo.Ticker, InvPos.PosType, 
    OptInfo.OptType, OptInfo.ShPerCtrct, InvPos.HeldInAcct, InvPos.Units, 
    InvPos.UnitPrice, InvPos.MktVal, InvPos.DtPriceAsOf, InvPos.CurSym, 
    InvPos.Memo, InvPos.Inv401kSource, sPosOpt.Secured
    
FROM dbOfx.InvPos as InvPos, dbOfx.PosOpt as sPosOpt, dbOfx.SecId as SecId,
	dbOfx.SecInfo as SecInfo, dbOfx.OptInfo as OptInfo, 
    dmOfx.Accounts AS Accounts

where InvPos.DtAsOf = (select max(DtAsOf) from dbOfx.InvPos)
	and InvPos.AcctId = Accounts.AcctId
    and sPosOpt.AcctId = InvPos.AcctId
    and InvPos.InvPosId = sPosOpt.InvPosId
    and SecId.SecId = InvPos.SecId
    and SecId.SecId = OptInfo.SecId
    and (SecId.BrokerId = SecInfo.BrokerId and SecId.SecId = SecInfo.SecId)
    and OptInfo.BrokerId = SecInfo.BrokerId
    ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOption2_insertPosOpt` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOption2_insertPosOpt`()
BEGIN
insert ignore into dmOfx.PosStockOption2
  (DMAcctId, FiTId, EquityId, Ticker, ClientSectorId,
  EquityType, PosType, OptType, ShPerCtrct, 
  Units, UnitPrice, MktVal, LMktVal) 
  
SELECT OpenOptionFIFO.DMAcctId, OpenOptionFIFO.FiTId, OpenOptionFIFO.EquityId, 
	OpenOptionFIFO.Ticker, ClientEquityAttributes.ClientSectorId, "OPTION", 
    if(OpenOptionFIFO.Units > 0, "LONG", "SHORT") as PosType,
    OpenOptionFIFO.OptType, OpenOptionFIFO.ShPerCtrct,
	OpenOptionFIFO.Units, OpenOptionFIFO.UnitPrice, 
    OpenOptionFIFO.UnitPrice * OpenOptionFIFO.Units * OpenOptionFIFO.ShPerCtrct,
    ClientEquityAttributes.StkPrice * OpenOptionFIFO.Units * OpenOptionFIFO.ShPerCtrct
    
from OpenOptionFIFO, ClientAccts, ClientEquityAttributes    
    
where OpenOptionFIFO.DMAcctId = ClientAccts.DMAcctId
	and OpenOptionFIFO.Ticker = ClientEquityAttributes.Ticker
    and ClientAccts.Active = "Yes"
    
order by OpenOptionFIFO.EquityId
    ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOption2_insertPosStock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOption2_insertPosStock`()
BEGIN
insert ignore into dmOfx.PosStockOption2
  (DMAcctId, FiTId, EquityId, Ticker, ClientSectorId,
  EquityType, PosType, OptType, ShPerCtrct, 
  Units, UnitPrice, MktVal)   
  
select OpenStockFIFO.DMAcctId, FiTId, 
	EquityId, OpenStockFIFO.Ticker, ClientSectorId, "STOCK", 
    if(Units > 0, "LONG", "SHORT") as PosType, 
    "", 1, OpenStockFIFO.Units, OpenStockFIFO.UnitPrice,
    ClientEquityAttributes.StkPrice * OpenStockFIFO.Units
    
from OpenStockFIFO, ClientAccts, ClientEquityAttributes    
    
where OpenStockFIFO.DMAcctId = ClientAccts.DMAcctId
	and OpenStockFIFO.Ticker = ClientEquityAttributes.Ticker
    and ClientAccts.Active = "Yes"
    
order by OpenStockFIFO.EquityId asc;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionActPct2_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionActPct2_update`()
BEGIN
/* add the actual portfolio percent to the table */

declare total double;
set total = (select sum(LMktVal) from PosStockOption2);

update PosStockOption2

set ActPct = round((100 * LMktVal) / total, 4);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionActPct_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionActPct_update`()
BEGIN
/* add the actual portfolio percent to the table */

declare total double;
set total = (select sum(LeveragedMktVal) from PosStockOption);

update PosStockOption

set ActPct = round((100 * LeveragedMktVal) / total, 4);
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionCash2_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionCash2_insert`()
BEGIN
/* get cash positions by account into the table */
insert ignore into PosStockOption2
	(DMAcctId, FiTId, EquityId, Ticker, ClientSectorId, EquityType, 
    PosType, OptType, ShPerCtrct, Units, UnitPrice, MktVal)
    
select Balances.DMAcctId, "CASH", "CASH", "CASH", 1, "CASH",
    "LONG", "", 1, Balances.`Value`, 1, Balances.`Value`
    
from Balances, ClientAccts

where Balances.DMAcctId = ClientAccts.DMAcctId
		and ClientAccts.Active = "Yes"
		and Balances.`Name` = "Available Cash";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionCashLMktValue2_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionCashLMktValue2_update`()
BEGIN
/* update table with leveraged cash values */
declare factor decimal(19,4);

set factor = (select (sum(LMktVal) / sum(MktVal))
	from PosStockOption2
	where EquityType = "OPTION" and PosType = "LONG");

update PosStockOption2

set PosStockOption2.LMktVal = round(PosStockOption2.MktVal * factor, 4)
	where EquityType = "CASH";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionCashLMktValue_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionCashLMktValue_update`()
BEGIN
/* update table with leveraged cash values */
declare factor decimal(19,4);

set factor = (select sum(LeveragedMktVal) 
				from PosStockOption
                where EquityType = "OPTION" and PosType = "LONG") / 
			(select sum(MktVal) 
            from PosStockOption
            where EquityType = "OPTION" and PosType = "LONG");

update PosStockOption

set PosStockOption.LeveragedMktVal = round(PosStockOption.MktVal * factor, 4)
	where EquityType = "CASH";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionCash_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionCash_insert`()
BEGIN
/* get cash positions by account into the table */
insert ignore into PosStockOption
	(DMAcctId, InvPosId, SecId, EquityId, SecName, Ticker, 
	ClientSectorId, EquityType, PosType, OptType, ShPerCtrct, 
    HeldInAccount, Units, UnitPrice, MktVal)
    
	select DMAcctId, DMAcctId, DMAcctId, "CASH", "CASH", "CASH",
    1, "CASH", "LONG", null, 1, 
    "CASH", `Value`, 1, `Value`
    from Balances
    where Balances.`Name` = "Available Cash"
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionClientSector2_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionClientSector2_update`()
BEGIN
/* adds client sector to table */
update PosStockOption2

join ClientEquityAttributes on PosStockOption2.Ticker = ClientEquityAttributes.Ticker

set PosStockOption2.ClientSectorId = ClientEquityAttributes.ClientSectorId

;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionClientSector_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionClientSector_update`()
BEGIN
/* adds client sector to table */
update PosStockOption

join ClientEquityAttributes on PosStockOption.Ticker = ClientEquityAttributes.Ticker

set PosStockOption.ClientSectorId = ClientEquityAttributes.ClientSectorId

;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionLMktValueOption2_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionLMktValueOption2_update`()
BEGIN
update PosStockOption2

join ClientEquityAttributes on PosStockOption2.Ticker = ClientEquityAttributes.Ticker
	
set LMktVal = Units * ShPerCtrct * ClientEquityAttributes.StkPrice,
	MktVal = Units * ShPerCtrct * UnitPrice
    
where EquityType = "OPTION" /*and PosType = "LONG"*/
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionLMktValueOption_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionLMktValueOption_update`()
BEGIN
update PosStockOption

join ClientEquityAttributes on PosStockOption.Ticker = ClientEquityAttributes.Ticker
	
set LeveragedMktVal = 
	Units * ShPerCtrct * ClientEquityAttributes.StkPrice
    
where EquityType = "OPTION" and PosType = "LONG"
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionLMktValueStock2_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionLMktValueStock2_update`()
BEGIN
/* look at the total of options leveraged value to put a leveraged
	value on stocks. Currently 50% of that leverage. */
declare factor decimal(19,4);
set factor = (select (sum(LMktVal) / sum(MktVal))
	from PosStockOption2
	where EquityType = "OPTION" and PosType = "LONG");

update PosStockOption2

join ClientEquityAttributes on PosStockOption2.Ticker = ClientEquityAttributes.Ticker

set MktVal = ClientEquityAttributes.StkPrice * PosStockOption2.Units,
/* assume stock purchase could have been leveraged at the same rate as options */
	LMktVal = round(MktVal * factor * 1.0, 4)
	/*LMktVal = round(MktVal * factor * 0.5, 4)*/
	where EquityType = "STOCK" and PosType = "LONG"

;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOptionLMktValueStock_update` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOptionLMktValueStock_update`()
BEGIN

declare factor decimal(19,4);
set factor = (select sum(LeveragedMktVal) 
				from PosStockOption
                where EquityType = "OPTION" and PosType = "LONG") / 
			(select sum(MktVal) 
            from PosStockOption
            where EquityType = "OPTION" and PosType = "LONG");

update PosStockOption

set LeveragedMktVal = round(MktVal * factor * 0.5, 4)
	where EquityType = "STOCK" and PosType = "LONG"

;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOption_insertPosOpt` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOption_insertPosOpt`()
BEGIN
insert ignore into dmOfx.PosStockOption
  (DMAcctId, InvPosId, DtAsOf, SecId, EquityId, SecName, Ticker, 
  EquityType, PosType, OptType, ShPerCtrct, 
  HeldInAccount, Units, UnitPrice, MktVal, DtPriceAsOf, CurSym, Memo, 
  Inv401kSource, Secured, UnitsStreet, UnitsUser, ReinvDiv) 
  
SELECT Accounts.DMAcctId, InvPos.InvPosId, InvPos.DtAsOf, InvPos.SecId, 
	SecInfo.EquityId, SecInfo.SecName, SecInfo.Ticker, "OPTION", 
    InvPos.PosType, OptInfo.OptType, OptInfo.ShPerCtrct,
	InvPos.HeldInAcct, InvPos.Units, InvPos.UnitPrice, InvPos.MktVal, 
    InvPos.DtPriceAsOf, InvPos.CurSym, InvPos.Memo, InvPos.Inv401kSource,
    sPosOpt.Secured, null, null, null
    
FROM dbOfx.InvPos as InvPos, dbOfx.PosOpt as sPosOpt, dbOfx.SecId as SecId,
	dbOfx.SecInfo as SecInfo, dbOfx.OptInfo as OptInfo, 
    dmOfx.Accounts AS Accounts

where InvPos.DtAsOf = (select max(DtAsOf) from dbOfx.InvPos)
	and InvPos.AcctId = Accounts.AcctId
    and sPosOpt.AcctId = InvPos.AcctId
    and InvPos.InvPosId = sPosOpt.InvPosId
    and SecId.SecId = InvPos.SecId
    and SecId.SecId = OptInfo.SecId
    and (SecId.BrokerId = SecInfo.BrokerId and SecId.SecId = SecInfo.SecId)
    and OptInfo.BrokerId = SecInfo.BrokerId
    ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStockOption_insertPosStock` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStockOption_insertPosStock`()
BEGIN
insert ignore into dmOfx.PosStockOption
  (DMAcctId, InvPosId, DtAsOf, SecId, EquityId, SecName, Ticker, EquityType, 
  PosType, ShPerCtrct, HeldInAccount, Units, UnitPrice, MktVal, 
  DtPriceAsOf, CurSym, Memo, Inv401kSource, 
  UnitsStreet, UnitsUser, ReinvDiv) 
  
SELECT Accounts.DMAcctId, InvPos.InvPosId, InvPos.DtAsOf, 
	InvPos.SecId, SecInfo.EquityId, SecInfo.SecName, SecInfo.Ticker, "STOCK", 
    InvPos.PosType, 1, InvPos.HeldInAcct, InvPos.Units, InvPos.UnitPrice, InvPos.MktVal, 
    InvPos.DtPriceAsOf, InvPos.CurSym, InvPos.Memo, InvPos.Inv401kSource, 
    Pos.UnitsStreet, Pos.UnitsUser, Pos.ReinvDiv
    
FROM dbOfx.InvPos as InvPos, dbOfx.PosStock as Pos, dbOfx.SecId as SecId,
	dbOfx.SecInfo as SecInfo, dmOfx.Accounts AS Accounts

where InvPos.AcctId = Accounts.AcctId
    and Pos.AcctId = InvPos.AcctId
    and InvPos.InvPosId = Pos.InvPosId
    and SecId.SecId = InvPos.SecId
    and (SecId.BrokerId = SecInfo.BrokerId and SecId.SecId = SecInfo.SecId); 
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `PosStock_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `PosStock_insert`()
BEGIN
insert into dmOfx.PosStock
  (DMAcctId, InvPosId, DtAsOf, SecId, EquityId, SecName, Ticker, PosType, HeldInAccount, 
  Units, UnitPrice, MktVal, DtPriceAsOf, CurSym, Memo, Inv401kSource, 
  UnitsStreet, UnitsUser, ReinvDiv) 
  
SELECT dmAccounts.DMAcctId, dbPosStock.InvPosId, dbInvPos.DtAsOf, 
	dbInvPos.SecId, dbSecInfo.EquityId, dbSecInfo.SecName, dbSecInfo.Ticker,
    dbInvPos.PosType, dbInvPos.HeldInAcct, dbInvPos.Units, dbInvPos.UnitPrice,
    dbInvPos.MktVal, dbInvPos.DtPriceAsOf, dbInvPos.CurSym, dbInvPos.Memo, 
    dbInvPos.Inv401kSource, dbPosStock.UnitsStreet, dbPosStock.UnitsUser, dbPosStock.ReinvDiv

from dbOfx.Brokers as dbBrokers, dbOfx.Accounts as dbAccounts, 
	dmOfx.Brokers as dmBrokers, dmOfx.Accounts as dmAccounts,
    dbOfx.PosStock as dbPosStock,
    dbOfx.InvPos as dbInvPos,
    dbOfx.SecInfo as dbSecInfo

where dbBrokers.BrokerId = dmBrokers.BrokerId
	and dbBrokers.BrokerId = dmAccounts.BrokerId
    and dbBrokers.BrokerId = dbAccounts.BrokerId
    and dbAccounts.AcctId = dmAccounts.AcctId
    
    and dbAccounts.AcctId = dbPosStock.AcctId
    
    and dbPosStock.AcctId = dbInvPos.AcctId
    and dbPosStock.InvPosId = dbInvPos.InvPosId
    
    and dbBrokers.BrokerId = dbSecInfo.BrokerId
    and dbInvPos.SecId = dbSecInfo.SecId
    ;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `QQQPctGainByDate_App` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `QQQPctGainByDate_App`()
BEGIN
/* used in application to retrieve QQQ PctGain by date*/
/* charting doesn't handle dates well; went to day of year for numerical */
set @start = (select min(`Date`) from EquityHistory
				where Tkr = "QQQ" and 
                year(`Date`) = year(current_date));
                
set @startMktValue = (select AdjClose from EquityHistory
				where Tkr = "QQQ" and `Date` = @start);

select `Date`, dayofyear(`Date`) as DayOfYear, AdjClose, 
@start, @startMktValue, 
round(100 * (AdjClose - @startMktValue) / @startMktValue, 1) as PctGain from EquityHistory

where Tkr = "QQQ"
and `Date` >= @start
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `RussellPctGainByDate_App` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `RussellPctGainByDate_App`()
BEGIN
/* used in application to retrieve Russell PctGain by date*/
/* charting doesn't handle dates well; went to day of year for numerical */
set @start = (select min(`Date`) from EquityHistory
				where Tkr = "IWM" and 
                year(`Date`) = year(current_date));
                
set @startMktValue = (select AdjClose from EquityHistory
				where Tkr = "IWM" and `Date` = @start);

select `Date`, dayofyear(`Date`) as DayOfYear, AdjClose, 
@start, @startMktValue, 
round(100 * (AdjClose - @startMktValue) / @startMktValue, 1) as PctGain from EquityHistory

where Tkr = "IWM"
and `Date` >= @start
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `SPXPctGainByDate_App` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `SPXPctGainByDate_App`()
BEGIN
/* used in application to retrieve QQQ PctGain by date*/
/* charting doesn't handle dates well; went to day of year for numerical */
set @start = (select min(`Date`) from EquityHistory
				where Tkr = "SPY" and 
                year(`Date`) = year(current_date));
                
set @startMktValue = (select AdjClose from EquityHistory
				where Tkr = "SPY" and `Date` = @start);

select `Date`, dayofyear(`Date`) as DayOfYear, AdjClose, 
@start, @startMktValue, 
round(100 * (AdjClose - @startMktValue) / @startMktValue, 1) as PctGain from EquityHistory

where Tkr = "SPY"
and `Date` >= @start
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `Transactions_retrieveAll` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `Transactions_retrieveAll`(
	in _days int(5))
BEGIN
/* used in application to populate transactions table */
SELECT Ticker, EquityId, GMTDtTradeClose as `Date`, 
  Units, Days, PosType, ClientAccts.ClientAcctName as `Acct`, ActPct, GainPct, 
  null as `Comment`, null as `Open`, GMTDtTradeClose as `Close`, ClientSectorId

FROM FIFOClosed, ClientAccts

where ClientAccts.DMAcctId = FIFOClosed.DmAcctId
	and GMTDtTradeClose > date_sub(curdate(), interval _days day)

	union

SELECT Ticker, EquityId, GMTDtTrade as `Date`, Units, 
	Days, PosType, ClientAccts.ClientAcctName as `Acct`, ActPct, GainPct, 
    null as `Comment`, GMTDtTrade as `Open`, null as `Close`, ClientSectorId
	
FROM FIFOPositions, ClientAccts

where ClientAccts.DMAcctId = FIFOPositions.DmAcctId

order by `Date` desc, Ticker asc
;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersClosingDebt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersClosingDebt_insert`()
BEGIN
INSERT INTO ClosingDebt
  (DMAcctId, FiTId, SecId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad, 
  Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId, AccrdInt) 
  
SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.SecName, SecInfo.Ticker,
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec, 
  "Transfer", 
  if (ClientTransferData.Units >= 0, "BuyToClose", "SelltoClose"),
  InvTran.ReversalFiTId 

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, dbOfx.InvTran AS InvTran, 
  dbOfx.DebtInfo AS DebtInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = DebtInfo.BrokerId
  AND ClientTransferData.SecId = DebtInfo.SecId
  AND ClientTransferData.TferAction = "OUT";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersClosingMF_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersClosingMF_insert`()
BEGIN
INSERT INTO ClosingMF (DMAcctId, FiTId, SecId, SecName, Ticker, GMTDtTrade, 
  GMTDtSettle, Units, UnitPrice, MarkUpDn, Commission, Taxes, 
  Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, 
  ReversalFiTId, SellType, RelFiTID, AvgCostBasis)
  
SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.SecName, SecInfo.Ticker,
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec, 
  "Transfer", InvTran.ReversalFiTId, 
  if (ClientTransferData.Units >= 0, "BuyToClose", "SelltoClose"),
  NULL, UnitPrice
  

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, dbOfx.InvTran AS InvTran, 
  dbOfx.DebtInfo AS DebtInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = DebtInfo.BrokerId
  AND ClientTransferData.SecId = DebtInfo.SecId
  AND ClientTransferData.TferAction = "OUT";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersClosingOptions_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersClosingOptions_insert`()
BEGIN
insert into dmOfx.ClosingOptions 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, StrikePrice, DtExpire,
  GMTDtTrade, GMTDtSettle, 
  ShPerCtrct, Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, OptTransType, ReversalFiTId) 

SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.EquityId, SecInfo.SecName, SecInfo.Ticker, 
    OptInfo.OptType, OptInfo.StrikePrice, str_to_date(left(OptInfo.DtExpire, 8), "%Y%m%d"),
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  OptInfo.ShPerCtrct, 
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec, 
  "Transfer", 
  if (ClientTransferData.Units >= 0, "BuyToClose", "SelltoClose"),
  InvTran.ReversalFiTId 

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, dbOfx.InvTran AS InvTran, dbOfx.OptInfo AS OptInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = OptInfo.BrokerId
  AND ClientTransferData.SecId = OptInfo.SecId
  AND ClientTransferData.TferAction = "OUT";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersClosingOther_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersClosingOther_insert`()
BEGIN
INSERT INTO dmOfx.OpeningOther (DMAcctId, FiTId, SecId, SecName, Ticker,
  GMTDtTrade, GMTDtSettle, Units, UnitPrice, MarkUpDn, Commission, Taxes, 
  Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId)
  
SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.SecName, SecInfo.Ticker,
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec, 
   "Transfer", InvTran.ReversalFiTId
  

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, dbOfx.InvTran AS InvTran, 
  dbOfx.DebtInfo AS DebtInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = DebtInfo.BrokerId
  AND ClientTransferData.SecId = DebtInfo.SecId
  AND ClientTransferData.TferAction = "OUT";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersClosingStock_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersClosingStock_insert`()
BEGIN
INSERT INTO dmOfx.ClosingStock 
  (DMAcctId, FiTId, SecId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, StockTransType, ReversalFiTId)

SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.SecName, SecInfo.Ticker,
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec, 
   "Transfer", 
  if (ClientTransferData.Units >= 0, "BuyToClose", "SelltoClose"),
  InvTran.ReversalFiTId 

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, 
    dbOfx.InvTran AS InvTran, dbOfx.StockInfo AS StockInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = StockInfo.BrokerId
  AND ClientTransferData.SecId = StockInfo.SecId
  AND ClientTransferData.TferAction = "OUT";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersOpeningDebt_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersOpeningDebt_insert`()
BEGIN
INSERT INTO OpeningDebt
  (DMAcctId, FiTId, SecId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad, 
  Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId, AccrdInt) 
  
SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.SecName, SecInfo.Ticker,
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec, 
  "Transfer", 
  if (ClientTransferData.Units >= 0, "BuyToOpen", "SellToOpen"),
  InvTran.ReversalFiTId 

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, dbOfx.InvTran AS InvTran, 
  dbOfx.DebtInfo AS DebtInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = DebtInfo.BrokerId
  AND ClientTransferData.SecId = DebtInfo.SecId
  AND ClientTransferData.TferAction = "IN";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersOpeningMF_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersOpeningMF_insert`()
BEGIN
INSERT INTO ClosingMF (DMAcctId, FiTId, SecId, SecName, Ticker, GMTDtTrade, 
  GMTDtSettle, Units, UnitPrice, MarkUpDn, Commission, Taxes, 
  Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, 
  ReversalFiTId, SellType, RelFiTID, AvgCostBasis)
  
SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.SecName, SecInfo.Ticker,
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec,
  "Transfer", 
  if (ClientTransferData.Units >= 0, "BuyToOpen", "SellToOpen"),
  InvTran.ReversalFiTId, NULL, UnitPrice

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, dbOfx.InvTran AS InvTran, 
  dbOfx.DebtInfo AS DebtInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = DebtInfo.BrokerId
  AND ClientTransferData.SecId = DebtInfo.SecId
  AND ClientTransferData.TferAction = "IN";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersOpeningOptions_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersOpeningOptions_insert`()
BEGIN
Insert Into OpeningOptions 
	(DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, OptType, 
    StrikePrice, DtExpire, GMTDtTrade, GMTDtSettle, ShPerCtrct, 
    Units, UnitPrice, MarkUpDn, Commission, 
    Taxes, Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, OptTransType, 
    ReversalFiTId)
  
SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.EquityId, SecInfo.SecName, SecInfo.Ticker, 
    OptInfo.OptType, OptInfo.StrikePrice, 
    str_to_date(left(OptInfo.DtExpire, 8), "%Y%m%d"),
    convertDateTime2GMT(InvTran.DtTrade),
	convertDateTime2GMT(InvTran.DtSettle),
	OptInfo.ShPerCtrct, 
	ClientTransferData.Units, ClientTransferData.CostBasis,
	Null, Null, Null, Null, Null, 0, Null, 
	ClientTransferData.SubAcctSec, 
	"Transfer", 
	if (ClientTransferData.Units >= 0, "BuyToOpen", "SellToOpen"),
	InvTran.ReversalFiTId 

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, dbOfx.InvTran AS InvTran, dbOfx.OptInfo AS OptInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = OptInfo.BrokerId
  AND ClientTransferData.SecId = OptInfo.SecId
  AND ClientTransferData.TferAction = "IN";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersOpeningOther_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersOpeningOther_insert`()
BEGIN
INSERT INTO dmOfx.OpeningOther 
	(DMAcctId, FiTId, SecId, EquityId, SecName, Ticker,
    GMTDtTrade, GMTDtSettle, Units, UnitPrice, MarkUpDn, Commission, Taxes, 
    Fees, TransLoad, Total, CurSym, SubAcctSec, SubAcctFund, ReversalFiTId)
  
SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.EquityId, SecInfo.SecName, SecInfo.Ticker,
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec, 
  "Transfer", 
  InvTran.ReversalFiTId
  

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, dbOfx.InvTran AS InvTran, 
  dbOfx.DebtInfo AS DebtInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = DebtInfo.BrokerId
  AND ClientTransferData.SecId = DebtInfo.SecId
  AND ClientTransferData.TferAction = "IN";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `TransfersOpeningStock_insert` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `TransfersOpeningStock_insert`()
BEGIN
INSERT INTO dmOfx.OpeningStock 
  (DMAcctId, FiTId, SecId, EquityId, SecName, Ticker, GMTDtTrade, GMTDtSettle, 
  Units, UnitPrice, MarkUpDn, Commission, Taxes, Fees, TransLoad,
  Total, CurSym, SubAcctSec, SubAcctFund, StockTransType, ReversalFiTId)

SELECT Accounts.DMAcctId, ClientTransferData.FiTId,
  ClientTransferData.SecId, SecInfo.EquityId, SecInfo.SecName, SecInfo.Ticker,
  convertDateTime2GMT(InvTran.DtTrade),
  convertDateTime2GMT(InvTran.DtSettle),
  ClientTransferData.Units, ClientTransferData.CostBasis,
  Null, Null, Null, Null, Null, 0, Null, 
  ClientTransferData.SubAcctSec, 
  "Transfer", 
  if (ClientTransferData.Units >= 0, "BuyToOpen", "SellToOpen"),
  InvTran.ReversalFiTId 

FROM dmOfx.Accounts AS Accounts, dmOfx.ClientTransferData AS ClientTransferData,
  dbOfx.SecInfo AS SecInfo, 
    dbOfx.InvTran AS InvTran, dbOfx.StockInfo AS StockInfo

WHERE Accounts.DMAcctId = ClientTransferData.DMAcctId
  AND ClientTransferData.FiTId = InvTran.FiTId
  AND Accounts.BrokerId = SecInfo.BrokerId
  AND ClientTransferData.SecId = SecInfo.SecId
  AND Accounts.BrokerId = StockInfo.BrokerId
  AND ClientTransferData.SecId = StockInfo.SecId
  AND ClientTransferData.TferAction = "IN";
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!50003 DROP PROCEDURE IF EXISTS `truncate_datamart` */;
/*!50003 SET @saved_cs_client      = @@character_set_client */ ;
/*!50003 SET @saved_cs_results     = @@character_set_results */ ;
/*!50003 SET @saved_col_connection = @@collation_connection */ ;
/*!50003 SET character_set_client  = utf8 */ ;
/*!50003 SET character_set_results = utf8 */ ;
/*!50003 SET collation_connection  = utf8_general_ci */ ;
/*!50003 SET @saved_sql_mode       = @@sql_mode */ ;
/*!50003 SET sql_mode              = 'ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION' */ ;
DELIMITER ;;
CREATE DEFINER=`hlhtxc5`@`localhost` PROCEDURE `truncate_datamart`()
BEGIN
  truncate table Accounts;
  ALTER TABLE Accounts AUTO_INCREMENT = 1000;
  truncate table Balances; 
  truncate table Brokers; 
  truncate table ClosedOptionsLots;
  truncate table ClosingDebt;
  truncate table ClosingMF;
  truncate table ClosingOptions;
  truncate table ClosingOther;
  truncate table ClosingStock;
  truncate table OpeningDebt;
  truncate table OpeningMF;
  truncate table OpeningOptions;
  truncate table OpeningOther;
  truncate table OpeningStock;
  truncate table OpenOptions;
  truncate table PosOpt;
  truncate table PosStock;
  truncate table PosStockOption;
  
  truncate table OpenStockFIFO;
  truncate table ClosedStockFIFO;
  truncate table ClosedStockTrans;
  
  truncate table OpenOptionFIFO;
  truncate table ClosedOptionFIFO;
  truncate table ClosedOptionTrans;
  
  truncate table PosStockOption2;
  
  truncate table FIFOPositions;
  truncate table FIFOClosed;
END ;;
DELIMITER ;
/*!50003 SET sql_mode              = @saved_sql_mode */ ;
/*!50003 SET character_set_client  = @saved_cs_client */ ;
/*!50003 SET character_set_results = @saved_cs_results */ ;
/*!50003 SET collation_connection  = @saved_col_connection */ ;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-08-26 10:37:26
